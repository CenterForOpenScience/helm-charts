apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "jenkins.fullname" . }}
  labels:
    app: {{ template "jenkins.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: {{ .Values.master.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "jenkins.name" . }}
      component: {{ .Values.master.name }}
      release: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "jenkins.name" . }}
        component: {{ .Values.master.name }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        # Init containers not updated on upgrade : https://github.com/kubernetes/helm/issues/2702
        # CUSTOM START
        {{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "8") }}
        pod.alpha.kubernetes.io/init-containers: null
        pod.beta.kubernetes.io/init-containers: null
        {{- end }}
        # CUSTOM END
    spec:
      {{- if .Values.master.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.master.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.master.tolerations }}
      tolerations:
        {{- toYaml .Values.master.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.rbac.create }}
      serviceAccountName: {{ template "jenkins.fullname" . }}
      {{- else }}
      serviceAccountName: default
      {{- end }}
      securityContext:
        runAsUser: 0
# CUSTOM START
      initContainers:
        - name: copy-default-config
          image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}"
          imagePullPolicy: {{ .Values.master.image.pullPolicy }}
          command:
            - sh
            - /var/jenkins_config/apply_config.sh
          volumeMounts:
            - name: config-volume
              mountPath: /var/jenkins_config
            - name: persistent-storage
              mountPath: /var/jenkins_home
            - name: plugins-volume
              mountPath: /usr/share/jenkins/ref/plugins/
            - name: secrets-volume
              mountPath: /usr/share/jenkins/ref/secrets/
      containers:
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: config-volume
              subPath: nginx.conf
              readOnly: true
            - mountPath: /usr/share/nginx/html/robots.txt
              name: config-volume
              subPath: robots.txt
              readOnly: true
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
# CUSTOM END
        - name: jenkins
          image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}"
          imagePullPolicy: "{{ .Values.master.image.pullPolicy }}"
          {{- if .Values.master.useSecurity }}
          args:
            - --argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)
            - --argumentsRealm.roles.$(ADMIN_USER)=admin
          {{- end }}
          env:
            {{- range $key, $value := .Values.master.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            {{- if .Values.master.useSecurity }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "jenkins.fullname" . }}
                  key: admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "jenkins.fullname" . }}
                  key: admin-user
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.jenkinsPort }}
            {{- if .Values.agent.enabled }}
            - name: agent-listener
              containerPort: {{ .Values.agent.listenerPort }}
            {{- end }}
            {{- if .Values.master.jmxPort }}
            - name: jmx
              containerPort: {{ .Values.master.jmxPort }}
            {{- end }}
          resources:
            {{- toYaml .Values.master.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: persistent-storage
              readOnly: false
            - mountPath: /var/jenkins_config
              name: config-volume
              readOnly: true
            - mountPath: /usr/share/jenkins/ref/plugins/
              name: plugins-volume
              readOnly: false
            - mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-volume
              readOnly: false
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "jenkins.fullname" . }}
        - name: plugins-volume
          emptyDir: {}
        - name: secrets-volume
          emptyDir: {}
        - name: persistent-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "jenkins.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
