apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "nessus.fullname" . }}
  labels:
    app: {{ template "nessus.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "nessus.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "nessus.fullname" . }}
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
        partition: 0
  template:
    metadata:
      labels:
        app: {{ template "nessus.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: bootstrap
          image: "{{ .Values.bootstrap.image.repository }}:{{ .Values.bootstrap.image.tag }}"
          imagePullPolicy: {{ .Values.bootstrap.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              if [ ! -d /data/nessus ]; then
                cp -R /opt/nessus /data/nessus
              fi
          volumeMounts:
            - mountPath: /data
              name: data
      containers:
        - name: docker
          image: "{{ .Values.docker.image.repository }}:{{ .Values.docker.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - docker
            - run
            - --rm
            - --interactive
            - --mac-address
            - "{{ .Values.macAddress }}"
            - --publish
            - "{{ .Values.service.internalPort }}:{{ .Values.service.internalPort }}"
            - --volume
            - /opt/nessus:/opt/nessus
            - --name
            - nessus
            - "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            ## Sleep the container for upgrades, copy and place file in /opt/nessus, exec into container and perform upgrade
            #- /bin/bash
            #- -c
            #- "sleep 9999999999999"
          env:
            - name: DOCKER_HOST
              value: tcp://localhost:2375
          ports:
            - name: https
              containerPort: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
              scheme: HTTPS
          volumeMounts:
            - mountPath: /opt/nessus
              name: data
              subPath: nessus
            {{- if .Values.tls.eanbled }}
            - name: secret
              subPath: tls-servercert.pem
              mountPath: /opt/nessus/com/nessus/CA/servercert.pem
              readOnly: true
            - name: secret
              subPath: tls-serverkey.pem
              mountPath: /opt/nessus/var/nessus/CA/serverkey.pem
              readOnly: true
            {{- end }}
            {{- if .Values.docker.imageCredentials.enabled }}
            - name: secret
              subPath: .dockerconfigjson
              mountPath: /root/.docker/config.json
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.docker.resources | nindent 12 }}
        - name: dind
          image: "{{ .Values.dind.image.repository }}:{{ .Values.dind.image.tag }}"
          imagePullPolicy: {{ .Values.dind.image.pullPolicy }}
          args:
            - --storage-driver=overlay
          ports:
            - name: dind
              containerPort: 2375
          volumeMounts:
            - mountPath: /opt/nessus
              name: data
              subPath: nessus
          securityContext:
            privileged: true
          resources:
            {{- toYaml .Values.dind.resources | nindent 12 }}
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        - name: secret
          secret:
            secretName: {{ template "nessus.fullname" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
