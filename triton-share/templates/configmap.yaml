apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "triton-share.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "triton-share.name" . }}
    helm.sh/chart: {{ include "triton-share.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
{{- define "triton-share.inlineconfigs.nginx-headers" }}
# Disable caching of application requests
add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate";
add_header Expires "Mon, 01 Jan 1990 00:00:00 GMT";
add_header Pragma "no-cache";

if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Allow-Origin' '{{ .Values.nginx.corsOrigin }}';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #
    # Custom headers and headers various browsers *should* be OK with but aren't
    #
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    #
    # Tell client that this pre-flight info is valid for 20 days
    #
    add_header 'Access-Control-Max-Age' 1728000;
    add_header 'Content-Type' 'text/plain; charset=utf-8';
    add_header 'Content-Length' 0;
    return 204;
}

if ($request_method = 'POST') {
    add_header 'Access-Control-Allow-Origin' '{{ .Values.nginx.corsOrigin }}';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
}

if ($request_method = 'GET') {
    add_header 'Access-Control-Allow-Origin' '{{ .Values.nginx.corsOrigin }}';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
}

# Mitigate HTTPoxy Vulnerability
# https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
proxy_set_header Proxy "";
proxy_set_header Connection "";

proxy_buffering off;
proxy_request_buffering off;
proxy_set_header        Host            $host;
proxy_set_header        X-Real-IP       $remote_addr;
proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
{{- end }}
{{- define "triton-share.inlineconfigs" }}
nginx.conf: |-
  user  nginx;
  worker_processes 1;

  load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
  {{- if .Values.nginx.vts.enabled }}
  load_module /usr/lib/nginx/modules/ngx_http_geoip_module.so;
  load_module /usr/lib/nginx/modules/ngx_http_vhost_traffic_status_module.so;
  {{- end }}

  error_log  /var/log/nginx/error.log warn;
  pid        /var/run/nginx.pid;

  events {
      worker_connections 1024;
  }

  http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format main '$remote_addr - $upstream_cache_status $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" '
                      'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
      access_log  /var/log/nginx/access.log  main;

      real_ip_header {{ .Values.nginx.realIpHeader }};
      real_ip_recursive {{ .Values.nginx.realIpRecursive }};
      {{- range .Values.nginx.proxySourceRanges }}
      set_real_ip_from {{ . }};
      {{- end }}

      {{- if .Values.nginx.vts.enabled }}
      geoip_country       /etc/nginx/GeoIP.dat;
      geoip_city          /etc/nginx/GeoLiteCity.dat;
      geoip_proxy_recursive on;
      {{- range .Values.nginx.proxySourceRanges }}
      geoip_proxy {{ . }};
      {{- end }}

      vhost_traffic_status_zone shared:vhost_traffic_status:{{ .Values.nginx.vts.statusZoneSize }};
      vhost_traffic_status_filter_by_set_key {{ .Values.nginx.vts.defaultFilterKey }};
      {{- end }}

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 620s;
      keepalive_requests 10000;
      types_hash_max_size 2048;
      server_tokens off;

      gzip on;
      gzip_proxied any;
      gzip_disable "msie6";
      gzip_min_length 1400;
      gzip_vary on;
      gzip_buffers 4 32k;
      gzip_types text/plain text/css image/svg+xml application/javascript application/x-javascript text/xml text/javascript application/json application/vnd.api+json;

      brotli on;
      brotli_types text/plain text/css image/svg+xml application/javascript application/x-javascript text/xml text/javascript application/json application/vnd.api+json;

      {{- if .Values.nginx.vts.enabled }}
      server {
          listen {{ .Values.nginx.vts.internalPort }};
          server_name _;

          location /healthz {
              access_log off;
              return 200;
          }

          location /nginx_status {
              vhost_traffic_status_display;
              vhost_traffic_status_display_format html;
          }
      }
      {{- end }}

      server {
          listen 80;
          keepalive_timeout 620s;
          client_max_body_size 25M;
          server_name _;

          if ($http_x_forwarded_proto = "http") {
              return 301 https://$host$request_uri;
          }

          location = /healthz {
              access_log off;
              return 200;
          }

          location = /robots.txt {
              alias /usr/share/nginx/html/robots.txt;
          }

          location = /bulk_get_agents {
              client_max_body_size 1M;

              {{- include "triton-share.inlineconfigs.nginx-headers" . | nindent 14 }}

              proxy_pass http://127.0.0.1:9000;
          }

          location / {
              {{- include "triton-share.inlineconfigs.nginx-headers" . | nindent 14 }}

              proxy_pass http://{{ template "triton-share.elasticsearch6.client.fullname" . }}:9200;
          }
      }
  }
{{- end -}}
  {{- range $key, $value := .Values.configEnvs }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- range $key, $value := merge .Values.configFiles (include "triton-share.inlineconfigs" . | fromYaml) ((.Files.Glob "files/*").AsConfig | fromYaml) }}
  {{ $key }}: |-
    {{- $value | nindent 4 }}
  {{- end }}