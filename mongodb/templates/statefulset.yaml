apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "mongodb.fullname" . }}
  labels:
    app: {{ template "mongodb.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "mongodb.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "mongodb.fullname" . }}
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        app: {{ template "mongodb.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      affinity:
        {{- if .Values.additionalAffinities }}
        {{- toYaml .Values.additionalAffinities | nindent 8 }}
        {{- end }}
        {{- if eq .Values.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "mongodb.name" . }}
                  release: {{ .Release.Name }}
        {{- else if eq .Values.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: {{ template "mongodb.name" . }}
                    release: {{ .Release.Name }}
        {{- end }}
      {{- if .Values.tls.enabled }}
      initContainers:
        - name: certificates
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - cp /certs/* /etc/ssl &&
              chown -R mongodb:mongodb /etc/ssl &&
              chmod -R 0600 /etc/ssl/*
          volumeMounts:
            {{- include "mongodb.volumeMounts" . | nindent 12 }}
          {{- range $key := keys .Values.tls.files }}
            - name: secret
              mountPath: /certs/{{ $key }}
              subPath: certs-{{ $key }}
              readOnly: true
          {{- end }}
      {{- end }}
      containers:
        - name: mongodb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "mongodb.environment" . | nindent 12 }}
          {{- if .Values.tls.enabled }}
          args:
            - --sslMode=requireSSL
            - --sslDisabledProtocols=TLS1_0,TLS1_1
            - --sslPEMKeyFile=/etc/ssl/mongodb.pem
            - --sslCAFile=/etc/ssl/ca.pem
            - --sslCRLFile=/etc/ssl/ca-crl.pem
          {{- end }}
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            {{- include "mongodb.probeExec" . | nindent 12 }}
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            {{- include "mongodb.probeExec" . | nindent 12 }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            {{- include "mongodb.volumeMounts" . | nindent 12 }}
        {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        {{- include "mongodb.volumes" . | nindent 8 }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
      {{- if hasKey .Values.persistence "storageClass" }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
