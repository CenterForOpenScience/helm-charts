apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "rabbitmq.fullname" . }}
  labels:
    app: {{ template "rabbitmq.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "rabbitmq.fullname" . }}
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        app: {{ template "rabbitmq.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      affinity:
        {{- if .Values.additionalAffinities }}
        {{- toYaml .Values.additionalAffinities | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ template "rabbitmq.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "rabbitmq.environment" . | indent 12 }}
          ports:
            {{- range $name, $port := omit .Values.service.ports "metrics" }}
            - name: {{ $name }}
              containerPort: {{ $port }}
            {{- end }}
          #livenessProbe:
          #  exec:
          #    command:
          #      - rabbitmqctl
          #      - status
          #  initialDelaySeconds: 120
          #  timeoutSeconds: 5
          #  failureThreshold: 6
          #readinessProbe:
          #  exec:
          #    command:
          #      - rabbitmqctl
          #      - status
          #  initialDelaySeconds: 10
          #  timeoutSeconds: 3
          #  periodSeconds: 5
          volumeMounts:
            {{- include "rabbitmq.volumeMounts" . | indent 12 }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
        {{- if .Values.metrics.enabled }}
        - name: metrics
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          env:
            {{- $fullname := include "rabbitmq.fullname" . }}
            - name: RABBIT_URL
              value: http{{- if .Values.tls.enabled -}}s{{- end -}}://localhost:{{- .Values.service.ports.stats }}
            - name: RABBIT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $fullname }}
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $fullname }}
                  key: RABBITMQ_DEFAULT_PASS
            - name: PUBLISH_PORT
              value: {{ .Values.service.ports.metrics | quote }}
            {{- if .Values.tls.enabled }}
            - name: CAFILE
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullname }}
                  key: RABBITMQ_SSL_CACERTFILE
            {{- end }}
            {{- $fullname := include "rabbitmq.fullname" . -}}
            {{- range $key := keys .Values.metrics.configEnvs }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullname }}
                  key: metrics-{{ $key }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.service.ports.metrics }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "rabbitmq.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: config
          configMap:
            name: {{ template "rabbitmq.fullname" . }}
        - name: secret
          secret:
            secretName: {{ template "rabbitmq.fullname" . }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        {{- if hasKey .Values.persistence "storageClass" }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
