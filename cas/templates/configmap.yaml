apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "cas.fullname" . }}
  labels:
    app: {{ template "cas.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
{{- define "cas.jetty.preprint-services" }}
africarxiv:
  id: '203948234207264'
  name: 'AfricArXiv Preprints'
agrixiv:
  id: '203948234207244'
  name: AgriXiv Preprints
  domain: agrixiv.org
arabixiv:
  id: '203948234207262'
  name: Arabixiv Preprints
  domain: arabixiv.org
banglarxiv:
  id: '203948234207266'
  name: Banglarxiv Preprints
bitss:
  id: '203948234207245'
  name: BITSS Preprints
bodoarxiv:
  id: '203948234207268'
  name: BodoArXiv Preprints
eartharxiv:
  id: '203948234207261'
  name: EarthArXiv Preprints
  domain: eartharxiv.org
ecoevorxiv:
  id: '203948234207265'
  name: EcoEvoRxiv Preprints
  domain: ecoevorxiv.org
ecsarxiv:
  id: '203948234207259'
  name: ECSarXiv Preprints
  domain: ecsarxiv.org
engrxiv:
  id: '203948234207242'
  name: engrXiv Preprints
  domain: engrxiv.org
experimentalprotocols:
  id: '203948234207258'
  name: Experimental Protocols Preprints
focusarchive:
  id: '203948234207248'
  name: FocUS Archive Preprints
frenxiv:
  id: '203948234207263'
  name: Frenxiv Preprints
  domain: frenxiv.org
inarxiv:
  id: '203948234207257'
  name: INA-Rxiv Preprints
lawarxiv:
  id: '203948234207247'
  name: LawArXiv Papers
lissa:
  id: '203948234207249'
  name: LIS Scholarship Archive Preprints
livedata:
  id: '203948234207254'
  name: LiveData
marxiv:
  id: '203948234207260'
  name: MarXiv Papers
  domain: marxiv.org
medarxiv:
  id: '203948234207256'
  name: MedArXiv Preprints
mediarxiv:
  id: '203948234207267'
  name: MediArXiv Preprints
  domain: mediarxiv.org
metaarxiv:
  id: '203948234207269'
  name: MetaArXiv Preprints
mindrxiv:
  id: '203948234207250'
  name: MindRxiv Preprints
  domain: mindrxiv.org
nutrixiv:
  id: '203948234207255'
  name: NutriXiv Preprints
paleorxiv:
  id: '203948234207251'
  name: PaleorXiv Preprints
  domain: paleorxiv.org
psyarxiv:
  id: '203948234207243'
  name: PsyArXiv Preprints
  domain: psyarxiv.com
scielo:
  id: '203948234207246'
  name: SciELO Preprints
socarxiv:
  id: '203948234207241'
  name: SocArXiv Preprints
sportrxiv:
  id: '203948234207252'
  name: SportRxiv Preprints
  domain: sportrxiv.org
thesiscommons:
  id: '203948234207253'
  name: Thesis Commons
  domain: thesiscommons.org
{{- end -}}
{{- define "cas.apache.inlineconfigs" }}
shibboleth/shibboleth2.xml: |-
  <SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
      xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
      xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
      xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
      xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
      clockSkew="180">

      <InProcess logger="native.logger" checkSpoofing="true"/>

      <!--
      By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
      are used. See example-shibboleth2.xml for samples of explicitly configuring them.
      -->

      <!--
      To customize behavior for specific resources on Apache, and to link vhosts or
      resources to ApplicationOverride settings below, use web server options/commands.
      See https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPConfigurationElements for help.

      For examples with the RequestMap XML syntax instead, see the example-shibboleth2.xml
      file, and the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPRequestMapHowTo topic.
      -->

      <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
      <ApplicationDefaults entityID="https://{{ .Values.casDomain }}/shibboleth"
                            REMOTE_USER="eppn persistent-id targeted-id" attributePrefix="AUTH-">

          <!--
          Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
          You MUST supply an effectively unique handlerURL value for each of your applications.
          The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
          a relative value based on the virtual host. Using handlerSSL="true", the default, will force
          the protocol to be https. You should also set cookieProps to "https" for SSL-only sites.
          Note that while we default checkAddress to "false", this has a negative impact on the
          security of your site. Stealing sessions via cookie theft is much easier with this disabled.
          -->
          <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                    checkAddress="false" handlerSSL="false" cookieProps="http">

              <!--
              Configures SSO for a default IdP. To allow for >1 IdP, remove
              entityID property and adjust discoveryURL to point to discovery service.
              (Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
              You can also override entityID on /Login query string, or in RequestMap/htaccess.
              -->
              <!-- <SSO entityID="https://idp.testshib.org/idp/shibboleth"
                    discoveryProtocol="SAMLDS" discoveryURL="https://ds.example.org/DS/WAYF">
                SAML2 SAML1
              </SSO> -->
              <!-- <SSO entityID="https://idp.testshib.org/idp/shibboleth">SAML2 SAML1</SSO> -->
              <!-- <SSO discoveryProtocol="SAMLDS" discoveryURL="https://wayf.incommonfederation.org/DS/WAYF">SAML2 SAML1</SSO> -->
              <SSO>SAML2 SAML1</SSO>

              <!-- SAML and local-only logout. -->
              <Logout>SAML2 Local</Logout>

              <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
              <Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>

              <!-- Status reporting service. -->
              <!-- <Handler type="Status" Location="/Status" acl="127.0.0.1 ::1"/> -->
              <Handler type="Status" Location="/Status"/>

              <!-- Session diagnostic service. -->
              <!-- <Handler type="Session" Location="/Session" showAttributeValues="false"/> -->
              <Handler type="Session" Location="/Session" showAttributeValues="true"/>

              <!-- JSON feed of discovery information. -->
              <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
          </Sessions>

          <!--
          Allows overriding of error template information/filenames. You can
          also add attributes with values that can be plugged into the templates.
          -->
          <Errors supportContact="support@cos.io" helpLocation="/about.html" styleSheet="/shibboleth-sp/main.css"/>
          <!-- <Errors supportContact="EMAIL" logoLocation="/shibboleth-sp/logo.jpg" styleSheet="/shibboleth-sp/main.css"/> -->

          <!-- Example of remotely supplied batch of signed metadata. -->
          <!--
          <MetadataProvider type="XML" uri="http://federation.org/federation-metadata.xml"
                backingFilePath="federation-metadata.xml" reloadInterval="7200">
              <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
              <MetadataFilter type="Signature" certificate="fedsigner.pem"/>
          </MetadataProvider>
          -->

          <!-- Example of locally maintained metadata. -->
          <!--
          <MetadataProvider type="XML" file="partner-metadata.xml"/>
          -->

          <!-- InCommon -->
          <!-- <MetadataProvider type="XML" uri="http://md.incommon.org/InCommon/InCommon-metadata.xml"
                            backingFilePath="incommon-idp-metadata.xml" reloadInterval="86400">
              <MetadataFilter type="Signature" certificate="incommon-idp-signature.pem"/>
          </MetadataProvider> -->

          <!-- Map to extract attributes from SAML assertions. -->
          <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>

          <!-- Use a SAML query if no attributes are supplied during SSO. -->
          <AttributeResolver type="Query" subjectMatch="true"/>

          <!-- Default filtering policy for recognized attributes, lets other data pass. -->
          <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

          <!-- Simple file-based resolver for using a single keypair. -->
          <CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

          <!--
          The default settings can be overridden by creating ApplicationOverride elements (see
          the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPApplicationOverride topic).
          Resource requests are mapped by web server commands, or the RequestMapper, to an
          applicationId setting.

          Example of a second application (for a second vhost) that has a different entityID.
          Resources on the vhost would map to an applicationId of "admin":
          -->
          <!--
          <ApplicationOverride id="admin" entityID="https://admin.example.org/shibboleth"/>
          -->
      </ApplicationDefaults>

      <!-- Policies that determine how to process and authenticate runtime messages. -->
      <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

      <!-- Low-level configuration about protocols and bindings available for use. -->
      <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

  </SPConfig>
httpd/conf.d/shib.conf: |-
  LoadModule mod_shib /usr/lib64/shibboleth/mod_shib_24.so

  <VirtualHost *:{{ .Values.service.internalPort }}>
    ServerName health
    LoadModule status_module "modules/mod_status.so"

    <Location "/healthz">
      LogLevel crit
      Require ip 10.0.0.0/8
      Require local
      SetHandler server-status
    </Location>
  </VirtualHost>
  <VirtualHost *:{{ .Values.service.internalPort }}>
    ServerName https://{{ required "casDomain must be set" .Values.casDomain }}:443
    UseCanonicalName On
    ServerAdmin admin@osf.io

    # Mitigate clickjacking
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
    Header set X-Frame-Options "deny"

    ProxyRequests off

    # the google health check must have a 200 from /
    RewriteEngine On
    RewriteCond %{HTTP_USER_AGENT} "googlehc" [NC]
    SetEnvIfNoCase User-Agent "googlehc" dontlog
    RewriteRule ^/ - [L,R=200]

    # Redirect HTTP to HTTPS
    RewriteCond %{HTTP:X-Forwarded-Proto} =http [NC]
    RewriteRule . https://%{HTTP:Host}%{REQUEST_URI} [L,R=permanent]

    <Location />
      # ShibDisable on
      ShibRequestSetting REMOTE_ADDR X-Forwarded-For

      ProxyPass http://127.0.0.1:{{ .Values.service.externalPort }}/
      ProxyPassReverse http://127.0.0.1:{{ .Values.service.externalPort }}/
    </Location>

    <Location /login>
      AuthType shibboleth
      # ShibRequestSetting requireSession 0
      Require shibboleth

      # https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPSpoofChecking
      # - Jetty 9 drops AJP Support (https://bugs.eclipse.org/bugs/show_bug.cgi?id=425244)
      ShibUseEnvironment off
      ShibUseHeaders on

      ProxyPass http://127.0.0.1:{{ .Values.service.externalPort }}/login
      ProxyPassReverse http://127.0.0.1:{{ .Values.service.externalPort }}/login
    </Location>

    <Location /Shibboleth.sso>
      ProxyPass !
      SetHandler shib
    </Location>
  </VirtualHost>
{{- end -}}
{{- define "cas.jetty.inlineconfigs" }}
cas.properties: |-
  #
  # Licensed to Apereo under one or more contributor license
  # agreements. See the NOTICE file distributed with this work
  # for additional information regarding copyright ownership.
  # Apereo licenses this file to you under the Apache License,
  # Version 2.0 (the "License"); you may not use this file
  # except in compliance with the License.  You may obtain a
  # copy of the License at the following location:
  #
  #   http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing,
  # software distributed under the License is distributed on an
  # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  # KIND, either express or implied.  See the License for the
  # specific language governing permissions and limitations
  # under the License.
  #


  ####
  #### OSF CAS
  ####
  #### This section "OSF CAS" contains new properties for OSF-oriented CAS customization.
  ####

  ##
  # Google Analytics
  #
  google.analytics.id=${GOOGLE_ANALYTICS_ID:}
  google.analytics.autoLink=${GOOGLE_ANALYTICS_AUTOLINK:}

  ##
  # CAS Login and Logout URLs
  #
  cas.osf.login.url=/login?
  cas.logout.url=/logout
  cas.institution.login.url=/login?campaign=institution

  ##
  # Login Rate Limiting
  #
  cas.rateLimiting.failureRangeInSeconds=${CAS_RL_FAILURE_RANGE_IN_SECONDS:1}
  cas.rateLimiting.failureThreshold=${CAS_RL_FAILURE_THRESHOLD:5}
  cas.rateLimiting.usernameParameter=${CAS_RL_USERNAME_PARAMETER:username}
  cas.rateLimiting.startDelay=${CAS_RL_START_DELAY:1000}
  cas.rateLimiting.repeatInterval=${CAS_RL_REPEAT_INTERVAL:5000}

  ##
  # Authentication Delegation: General
  #
  delegation.redirect.uri=https://{{ .Values.casDomain }}/login
  #
  ##
  # Authentication Delegation: Clients
  #
  # CAS Client: California Lutheran University
  cas.callutheran.login.url=${CAS_CALLUTHERAN_LOGIN_URL:https://sso.callutheran.edu/cas/login}
  cas.callutheran.client.name=${CAS_CALLUTHERAN_CLIENT_NAME:callutheran}
  cas.callutheran.cas.protocol=${CAS_CALLUTHERAN_CAS_PROTOCOL:SAML}
  #
  # CAS Client: Oklahoma State University
  cas.okstate.login.url=${CAS_OKSTATE_LOGIN_URL:https://stgcas.okstate.edu/cas/login}
  cas.okstate.client.name=${CAS_OKSTATE_CLIENT_NAME:okstate}
  cas.okstate.cas.protocol=${CAS_OKSTATE_CAS_PROTOCOL:SAML}
  #
  # OAuth Client: ORCiD
  oauth.orcid.authorize.url=${OAUTH_ORCID_AUTHORIZATION_URL:https://orcid.org/oauth/authorize}
  oauth.orcid.token.url=${OAUTH_ORCID_TOKEN_URL:https://pub.orcid.org/oauth/token}
  oauth.orcid.client.id=${OAUTH_ORCID_CLIENT_ID:}
  oauth.orcid.client.secret=${OAUTH_ORCID_CLIENT_SECRET:}
  oauth.orcid.member=${OAUTH_ORCID_MEMBER:false}
  oauth.orcid.scope=${OAUTH_ORCID_SCOPE:/authenticate}

  ##
  # OSF URLs
  #
  osf.url=https://{{ .Values.osfDomain }}/
  osf.institutionLogin.url=https://{{ .Values.osfDomain }}/login/?campaign=institution
  osf.resendConfirmation.url=https://{{ .Values.osfDomain }}/resend/
  osf.forgotPassword.url=https://{{ .Values.osfDomain }}/forgotpassword/
  osf.createAccount.url=https://{{ .Values.osfDomain }}/register/

  ##
  # API URLs
  #
  osf.api.institutions.auth.url=https://{{ .Values.apiDomain }}/v2/institutions/auth/
  # The encryption secret key. By default, must be a octet string of size 256.
  osf.api.institutions.auth.jweSecret=${OSF_JWE_SECRET}
  osf.api.institutions.auth.jwtSecret=${OSF_JWT_SECRET}
  osf.api.institutions.auth.xslLocation=file:/etc/cas/institutions-auth.xsl

  ##
  # Open Science Framework Postgres Database
  #
  osf.database.driverClass=org.postgresql.Driver
  osf.database.url=${OSF_DB_URL:jdbc:postgresql://127.0.0.1/osf?targetServerType=master}
  osf.database.user=${OSF_DB_USER:postgres}
  osf.database.password=${OSF_DB_PASSWORD:}
  osf.database.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect

  ##
  # OAuth Provider
  #
  # OAuth Access Token session length in seconds
  oauth.accessTokenDuration=3600
  oauth.loginUrl=https://{{ .Values.casDomain }}/login



  ####
  #### Central Authentication Service (CAS)
  ####
  #### This section "Central Authentication Service (CAS)" contains default properties from jasig/apereo.
  ####

  server.name=https://{{ .Values.casDomain }}
  server.prefix=${server.name}

  # Spring Security's EL-based access rules for the /status URI of CAS that exposes health check information
  cas.securityContext.status.access=hasIpAddress('127.0.0.1')

  # Spring Security's EL-based access rules for the /statistics URI of CAS that exposes stats about the CAS server
  cas.securityContext.statistics.access=hasIpAddress('127.0.0.1')

  cas.themeResolver.defaultThemeName=cas-theme-default

  # Path prefix for where views are to be found
  # cas.viewResolver.defaultViewsPathPrefix=/WEB-INF/view/jsp/default/ui/

  # Location of the Spring xml config file where views may be collected
  # cas.viewResolver.xmlFile=/META-INF/spring/views.xml

  ##
  # Unique CAS node name
  # host.name is used to generate unique Service Ticket IDs and SAMLArtifacts.  This is usually set to the specific
  # hostname of the machine running the CAS node, but it could be any label so long as it is unique in the cluster.
  host.name={{ .Values.casDomain }}

  ##
  # Database flavors for Hibernate
  #
  database.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
  database.hibernate.batchSize=1
  database.hibernate.showSql=false
  database.driverClass=org.postgresql.Driver
  database.url=${DATABASE_URL}
  database.user=${DATABASE_USER}
  database.password=${DATABASE_PASSWORD}

  ##
  # CAS SSO Cookie Generation & Security
  # See https://github.com/mitreid-connect/json-web-key-generator
  #
  # Do note that the following settings MUST be generated per deployment.
  #
  # Defaults at spring-configuration/ticketGrantingTicketCookieGenerator.xml
  # The encryption secret key. By default, must be a octet string of size 256.
  tgc.encryption.key=${TGC_ENCRYPTION_KEY}
  #
  # The signing secret key. By default, must be a octet string of size 512.
  tgc.signing.key=${TGC_SIGNING_KEY}
  #
  # Allow non-secure cookie generation, Must set this `true` for production.
  tgc.cookie.secure=true
  #
  # Do not allow client side script to access the cookie, MUST set this `true` for production.
  tgc.cookie.httponly=true

  ##
  # CAS Session Cookie
  #
  jsession.cookie.secure=true
  jsession.cookie.httponly=true

  ##
  # CAS Logout Behavior
  # WEB-INF/cas-servlet.xml
  #
  # Specify whether CAS should redirect to the specified service parameter on /logout requests
  cas.logout.followServiceRedirects=true

  ##
  # CAS Cached Attributes Timeouts
  # Controls the cached attribute expiration policy
  #
  # Notes the duration in which attributes will be kept alive
  # cas.attrs.timeToExpireInHours=2

  ##
  # Single Sign-On Session
  #
  # Indicates whether an SSO session should be created for renewed authentication requests.
  # create.sso.renewed.authn=true
  #
  # Indicates whether an SSO session can be created if no service is present.
  # create.sso.missing.service=true

  ##
  # Spring Webflow Web Application Session
  # Define the settings that are required to encrypt and persist the CAS web application session.
  # See the cas-servlet.xml file to understand how these properties are used.
  #
  # cas.webflow.cipher.alg=AES
  # cas.webflow.cipher.mode=CBC
  # cas.webflow.cipher.padding=PKCS7
  # cas.webflow.keystore=classpath:/etc/keystore.jceks
  # cas.webflow.keystore.type=JCEKS
  # cas.webflow.keystore.password=changeit
  # cas.webflow.keyalias=aes128
  # cas.webflow.keypassword=changeit

  ##
  # Single Sign-On Session Timeouts
  # Defaults sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
  #
  # Maximum session timeout - TGT will expire in maxTimeToLiveInSeconds regardless of usage
  # tgt.maxTimeToLiveInSeconds=28800
  #
  # Idle session timeout -  TGT will expire sooner than maxTimeToLiveInSeconds if no further requests
  # for STs occur within timeToKillInSeconds
  # tgt.timeToKillInSeconds=7200
  #
  # Long term authentication session length in seconds (30 days)
  tgt.rememberMeDuration=${TGT_REMEMBER_ME_DURATION:2592000}

  ##
  # Service Ticket Timeout
  # Default sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
  #
  # Service Ticket timeout - typically kept short as a control against replay attacks, default is 10s.  You'll want to
  # increase this timeout if you are manually testing service ticket creation/validation via tamperdata or similar tools
  st.timeToKillInSeconds=${ST_TIME_TO_KILL_IN_SECONDS:60}

  ##
  # Http Client Settings
  #
  # The http client read timeout in milliseconds
  # http.client.read.timeout=5000
  #
  # The http client connection timeout in milliseconds
  # http.client.connection.timeout=5000
  #
  # The http client truststore file, in addition to the default's
  #http.client.truststore.file=classpath:truststore.jks
  #
  # The http client truststore's password
  # http.client.truststore.psw=changeit

  ##
  # Single Logout Out Callbacks
  # Default sourced from WEB-INF/spring-configuration/argumentExtractorsConfiguration.xml
  #
  # To turn off all back channel SLO requests set this to true
  slo.callbacks.disabled=true
  #
  # To send callbacks to endpoints synchronously, set this to false
  # slo.callbacks.asynchronous=true

  ##
  # CAS Protocol Security Filter
  #
  # Are multi-valued parameters accepted?
  # cas.http.allow.multivalue.params=false
  #
  # Define the list of request parameters to examine for sanity
  # cas.http.check.params=ticket,service,renew,gateway,warn,target,SAMLart,pgtUrl,pgt,pgtId,pgtIou,targetService
  #
  # Define the list of request parameters only allowed via POST
  cas.http.allow.post.params=password,oneTimePassword

  ##
  # JSON Service Registry
  #
  # Directory location where JSON service files may be found.
  service.registry.config.location=file:/etc/cas/services

  ##
  # Service Registry Periodic Reloading Scheduler
  # Default sourced from WEB-INF/spring-configuration/applicationContext.xml
  #
  # Force a startup delay of 2 minutes.
  # service.registry.quartz.reloader.startDelay=120000
  #
  # Reload services every 2 minutes
  # service.registry.quartz.reloader.repeatInterval=120000

  ##
  # Log4j
  # Default sourced from WEB-INF/spring-configuration/log4jConfiguration.xml:
  #
  # It is often time helpful to externalize log4j.xml to a system path to preserve settings between upgrades.
  log4j.config.location=file:/etc/cas/log4j2.xml

  ##
  # Metrics
  # Default sourced from WEB-INF/spring-configuration/metricsConfiguration.xml:
  #
  # Define how often should metric data be reported. Default is 30 seconds.
  metrics.refresh.internal=${METRICS_REFRESH_INTERNAL:9999s}

  ##
  # Encoding
  #
  # Set the encoding to use for requests. Default is UTF-8
  # httprequest.web.encoding=UTF-8
  #
  # Default is true. Switch this to "false" to not enforce the specified encoding in any case,
  # applying it as default response encoding as well.
  # httprequest.web.encoding.force=true

  ##
  # Reports
  #
  # Setting to whether include the ticket granting ticket id in the report
  # sso.sessions.include.tgt=false

  ##
  # Password Policy
  #
  # Warn all users of expiration date regardless of warningDays value.
  # password.policy.warnAll=false
  #
  # Threshold number of days to begin displaying password expiration warnings.
  # password.policy.warningDays=30
  #
  # URL to which the user will be redirected to change the password.
  # password.policy.url=https://password.example.edu/change
log4j2.xml: |-
  <?xml version="1.0" encoding="UTF-8" ?>
  <Configuration monitorInterval="60">
      <Appenders>
          <Console name="Console" target="SYSTEM_OUT">
              <PatternLayout pattern="%d %p [%c] - &lt;%m&gt;%n" />
          </Console>
          <Raven name="Sentry">
              <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY" />
              <DSN>{{ .Values.sentryDSN }}</DSN>
          </Raven>
      </Appenders>
      <Loggers>
          <Logger name="io.cos" level="info" additivity="false">
              <AppenderRef ref="Console" />
          </Logger>
          <Logger name="org.jasig" level="info" additivity="false">
              <AppenderRef ref="Console" />
          </Logger>
          <Logger name="perfStatsLogger" level="off" additivity="false">
              <AppenderRef ref="Console" />
          </Logger>
          <Root level="warn">
              <AppenderRef ref="Console" />
              <AppenderRef ref="Sentry" />
          </Root>
      </Loggers>
  </Configuration>
services/cas.json: |-
  {
    "@class" : "org.jasig.cas.services.RegexRegisteredService",
    "id" : 983219871349823,
    "name" : "",
    "description" : "",
    "serviceId" : "^https://{{ .Values.casDomain | replace "." "\\\\." }}/.*",
    "evaluationOrder": "2000",
    "logo": "",
    "attributeReleasePolicy" : {
      "@class" : "org.jasig.cas.services.ReturnAllowedAttributeReleasePolicy",
      "allowedAttributes" : [ "java.util.ArrayList", [ "givenName", "familyName" ] ]
    },
    "properties" : {
      "@class": "java.util.HashMap",
      "title": {
        "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
        "values": [
          "java.util.HashSet",
          [
            "Open Science Framework"
          ]
        ]
      },
      "titleAbbr": {
        "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
        "values": [
          "java.util.HashSet",
          [
            "OSF"
          ]
        ]
      }
    }
  }
services/oauth2.json: |-
  {
    "@class" : "org.jasig.cas.support.oauth.services.OAuthCallbackAuthorizeService",
    "id" : 983450982340993434,
    "name" : "",
    "description" : "",
    "serviceId" : "^https://{{ .Values.casDomain | replace "." "\\\\." }}/oauth2/callbackAuthorize",
    "evaluationOrder": "1000",
    "properties" : {
      "@class": "java.util.HashMap",
      "title": {
        "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
        "values": [
          "java.util.HashSet",
          [
            "Open Science Framework"
          ]
        ]
      },
      "titleAbbr": {
        "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
        "values": [
          "java.util.HashSet",
          [
            "OSF"
          ]
        ]
      }
    }
  }
services/osf-campaigns-erpc.json: |-
  {
      "@class": "org.jasig.cas.services.RegexRegisteredService",
      "id": 203948234207232,
      "name": "Election Research<br>Preacceptance Competition",
      "description": "",
      "serviceId": "^https://{{ .Values.osfDomain | replace "." "\\\\." }}/erpc/.*",
      "logo": "",
      "evaluationOrder": 1000,
      "attributeReleasePolicy": {
          "@class": "org.jasig.cas.services.ReturnAllowedAttributeReleasePolicy",
          "allowedAttributes": [
              "java.util.ArrayList", [
                  "given-names",
                  "family-name"
              ]
          ]
      },
      "properties": {
          "@class": "java.util.HashMap",
          "title": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "Open Science Framework"
                  ]
              ]
          },
          "titleAbbr": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "OSF"
                  ]
              ]
          },
          "registerUrl": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "?campaign=erpc"
                  ]
              ]
          }
      }
  }
services/osf-campaigns-prereg.json: |-
  {
      "@class": "org.jasig.cas.services.RegexRegisteredService",
      "id": 203948234207231,
      "name": "Preregistration Challenge",
      "description": "",
      "serviceId": "^https://{{ .Values.osfDomain | replace "." "\\\\." }}/prereg/.*",
      "logo": "",
      "evaluationOrder": 1000,
      "attributeReleasePolicy": {
          "@class": "org.jasig.cas.services.ReturnAllowedAttributeReleasePolicy",
          "allowedAttributes": [
              "java.util.ArrayList", [
                  "given-names",
                  "family-name"
              ]
          ]
      },
      "properties": {
          "@class": "java.util.HashMap",
          "title": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "Open Science Framework"
                  ]
              ]
          },
          "titleAbbr": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "OSF"
                  ]
              ]
          },
          "registerUrl": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "?campaign=prereg"
                  ]
              ]
          }
      }
  }
services/osf.json: |-
  {
      "@class": "org.jasig.cas.services.RegexRegisteredService",
      "id": 203948234207230,
      "name": "",
      "description": "",
      "serviceId": "^https://{{ .Values.osfDomain | replace "." "\\\\." }}/(?!oauth/callback).*",
      "logo": "",
      "evaluationOrder": 2000,
      "attributeReleasePolicy": {
          "@class": "org.jasig.cas.services.ReturnAllowedAttributeReleasePolicy",
          "allowedAttributes": [
              "java.util.ArrayList", [
                  "given-names",
                  "family-name"
              ]
          ]
      },
      "properties": {
          "@class": "java.util.HashMap",
          "title": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "Open Science Framework"
                  ]
              ]
          },
          "titleAbbr": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "OSF"
                  ]
              ]
          },
          "registerUrl": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      ""
                  ]
              ]
          }
      }
  }
services/registries-osf.json: |-
  {
      "@class": "org.jasig.cas.services.RegexRegisteredService",
      "id": 203948234207340,
      "name": "",
      "description": "",
      "serviceId": "^https://{{ .Values.osfDomain | replace "." "\\\\." }}/login/?\\?next=https(%3A|:)(%2F|/)(%2F|/){{ .Values.osfDomain | replace "." "\\\\." }}(%2F|/)registries(%2F|/).*",
      "logo": "https://{{ .Values.casDomain }}/images/registries-osf-logo-black.png",
      "evaluationOrder": 1001,
      "attributeReleasePolicy": {
          "@class": "org.jasig.cas.services.ReturnAllowedAttributeReleasePolicy",
          "allowedAttributes": [
              "java.util.ArrayList", [
                  "given-names",
                  "family-name"
              ]
          ]
      },
      "properties": {
          "@class": "java.util.HashMap",
          "title": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "Open Science Framework"
                  ]
              ]
          },
          "titleAbbr": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "OSF"
                  ]
              ]
          },
          "registerUrl": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "?campaign=osf-registries"
                  ]
              ]
          }
      }
  }
services/preprints-osf.json: |-
  {
      "@class": "org.jasig.cas.services.RegexRegisteredService",
      "id": 203948234207240,
      "name": "",
      "description": "",
      "serviceId": "^https://{{ .Values.osfDomain | replace "." "\\\\." }}/login/?\\?next=https(%3A|:)(%2F|/)(%2F|/){{ .Values.osfDomain | replace "." "\\\\." }}(%2F|/)preprints(%2F|/).*",
      "logo": "https://{{ .Values.casDomain }}/images/preprints-osf-logo-black.png",
      "evaluationOrder": 1001,
      "attributeReleasePolicy": {
          "@class": "org.jasig.cas.services.ReturnAllowedAttributeReleasePolicy",
          "allowedAttributes": [
              "java.util.ArrayList", [
                  "given-names",
                  "family-name"
              ]
          ]
      },
      "properties": {
          "@class": "java.util.HashMap",
          "title": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "Open Science Framework"
                  ]
              ]
          },
          "titleAbbr": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "OSF"
                  ]
              ]
          },
          "registerUrl": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "?campaign=osf-preprints"
                  ]
              ]
          }
      }
  }
{{- $osfDomainRegex := .Values.osfDomain | replace "." "\\\\." -}}
{{- $casDomain := .Values.casDomain -}}
{{- $domainOverride := .Values.preprintProviderDomains.override -}}
{{- $domainPrefix := .Values.preprintProviderDomains.prefix -}}
{{- $domainSuffix := .Values.preprintProviderDomains.suffix -}}
{{- range $key, $val := (include "cas.jetty.preprint-services" . | fromYaml) }}
services/preprints-{{ $key }}.json: |-
  {
      "@class": "org.jasig.cas.services.RegexRegisteredService",
      "id": {{ $val.id }},
      "name": "{{ $val.name }}",
      "description": "",
      "serviceId": "^https://{{ $osfDomainRegex }}/(login|logout)/?\\?next=https(%3A|:)(%2F|/)(%2F|/)
          {{- if hasKey $val "domain" -}}
              (
                {{- if $domainOverride -}}
                    {{- printf "%s%s%s" $domainPrefix $key $domainSuffix | replace "." "\\\\." -}}
                {{- else -}}
                    {{- $val.domain | replace "." "\\\\." -}}
                {{- end -}}
               |{{ $osfDomainRegex }}(%2F|/)preprints(%2F|/){{ $key }}($|%2F|/))
          {{- else -}}
              {{ $osfDomainRegex }}(%2F|/)preprints(%2F|/){{ $key }}
          {{- end -}}
      .*",
      "logo": "https://{{ $casDomain }}/images/preprints-{{ $key }}-logo.png",
      "evaluationOrder": 1000,
      "attributeReleasePolicy": {
          "@class": "org.jasig.cas.services.ReturnAllowedAttributeReleasePolicy",
          "allowedAttributes": [
              "java.util.ArrayList", [
                  "given-names",
                  "family-name"
              ]
          ]
      },
      "properties": {
          "@class": "java.util.HashMap",
          "title": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "Open Science Framework"
                  ]
              ]
          },
          "titleAbbr": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "OSF"
                  ]
              ]
          },
          "registerUrl": {
              "@class": "org.jasig.cas.services.DefaultRegisteredServiceProperty",
              "values": [
                  "java.util.HashSet", [
                      "?campaign={{ $key }}-preprints"
                  ]
              ]
          }
      }
  }
{{- end -}}
{{- end -}}

{{- define "cas.apache.fileconfigs" -}}
{{- range $path, $bytes := .Files.Glob "files/apache/**" }}
{{ $path | trimPrefix "files/apache/" }}: |-
{{ printf "%s" $bytes | indent 2 }}
{{- end -}}
{{- end -}}

{{- define "cas.jetty.fileconfigs" -}}
{{- range $path, $bytes := .Files.Glob "files/jetty/**" }}
{{ $path | trimPrefix "files/jetty/" }}: |-
{{ printf "%s" $bytes | indent 2 }}
{{- end -}}
{{- end -}}

{{- range $key, $value := .Values.apache.configEnvs }}
  apache-{{ $key }}: {{ $value | quote }}
{{- end }}
{{- range $key, $value := merge .Values.apache.configFiles (include "cas.apache.inlineconfigs" . | fromYaml) (include "cas.apache.fileconfigs" . | fromYaml) }}
  apache-{{ $key | replace "/" "-" }}: |-
    {{- $value | nindent 4 }}
{{- end }}

{{- range $key, $value := .Values.jetty.configEnvs }}
  jetty-{{ $key }}: {{ $value | quote }}
{{- end }}
{{- range $key, $value := merge .Values.jetty.configFiles (include "cas.jetty.inlineconfigs" . | fromYaml) (include "cas.jetty.fileconfigs" . | fromYaml) }}
  jetty-{{ $key | replace "/" "-" }}: |-
    {{- $value | nindent 4 }}
{{- end }}
