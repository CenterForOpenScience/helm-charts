# Default values for elasticsearch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
appVersion: "6.4"

image:
  repository: docker.elastic.co/elasticsearch/elasticsearch-oss
  tag: "6.4.1"
  pullPolicy: Always

cluster:
  name: elasticsearch
  kubernetesDomain: cluster.local
  # config:
  #   searchguard.ssl.http.enabled: ${SEARCHGUARD_SSL_HTTP_ENABLED:false}
  #   searchguard.ssl.transport.enabled: ${SEARCHGUARD_SSL_TRANSPORT_ENABLED:false}
  env:
    # IMPORTANT: https://www.elastic.co/guide/en/elasticsearch/reference/current/important-settings.html#minimum_master_nodes
    # To prevent data loss, it is vital to configure the discovery.zen.minimum_master_nodes setting so that each master-eligible
    # node knows the minimum number of master-eligible nodes that must be visible in order to form a cluster.
    MINIMUM_MASTER_NODES: "2"

plugins:
  enabled: false
  # install:
  #   - com.floragunn:search-guard-6:6.4.1-23.1
  # remove:
  #   - x-pack

xpack:
  enabled: false
  # config:
  #   # see https://www.elastic.co/guide/en/x-pack/current/xpack-settings.html
  #   xpack.ml.enabled: ${XPACK_ML_ENABLED:false}
  #   xpack.monitoring.enabled: ${XPACK_MONITORING_ENABLED:false}
  #   xpack.security.enabled: ${XPACK_SECURITY_ENABLED:false}
  #   xpack.watcher.enabled: ${XPACK_WATCHER_ENABLED:false}

searchguard:
  enabled: false
  # config:
  #   # Example: https://github.com/floragunncom/search-guard/blob/master/sgconfig/elasticsearch.yml.example
  #   searchguard.enterprise_modules_enabled: false
  #   searchguard.allow_default_init_sgindex: true
  #   searchguard.authcz.admin_dn:
  #     - CN=kirk,OU=client,O=client,l=tEst, C=De
  #   searchguard.nodes_dn:
  #     - "CN=*.example.com, OU=SSL, O=Test, L=Test, C=DE"
  #     - "CN=node.other.com, OU=SSL, O=Test, L=Test, C=DE"
  #
  #   # HTTP Configuration
  #   searchguard.ssl.http.enabled: true
  #   searchguard.ssl.http.pemkey_filepath: server_key.pem
  #   # searchguard.ssl.http.pemkey_password: changeme
  #   searchguard.ssl.http.pemcert_filepath: server_cert.pem
  #   searchguard.ssl.http.pemtrustedcas_filepath: ca_cert.pem
  #   searchguard.ssl.http.crl.validate: true
  #   searchguard.ssl.http.crl.file_path: ca_crl.pem
  #   searchguard.ssl.http.crl.prefer_crlfile_over_ocsp: true
  #   searchguard.ssl.http.crl.check_only_end_entities: false
  #   searchguard.ssl.http.clientauth_mode: REQUIRE
  #
  #   # Transport Configuration
  #   searchguard.ssl.transport.enabled: true
  #   searchguard.ssl.transport.pemkey_filepath: server_key.pem
  #   # searchguard.ssl.transport.pemkey_password: changeme
  #   searchguard.ssl.transport.pemcert_filepath: server_cert.pem
  #   searchguard.ssl.transport.pemtrustedcas_filepath: ca_cert.pem
  #   searchguard.ssl.transport.enforce_hostname_verification: false
  #   searchguard.ssl.transport.resolve_hostname: false
  # files:
    # Client Certificate Auth
    # e.g. https://github.com/floragunncom/search-guard/blob/master/sgconfig/sg_config.yml
    # search-guard-6/sgconfig/sg_config.yml: |-
    #   searchguard:
    #     dynamic:
    #       authc:
    #         clientcert_auth_domain:
    #           http_enabled: true
    #           transport_enabled: true
    #           order: 0
    #           http_authenticator:
    #             type: clientcert
    #             config:
    #               username_attribute: cn  # optional, if omitted DN becomes username
    #             challenge: false
    #           authentication_backend:
    #             type: noop
    # e.g. https://github.com/floragunncom/search-guard/blob/master/sgconfig/sg_internal_users.yml
    # search-guard-6/sgconfig/sg_internal_users.yml: |-
    #   ...
    # e.g. https://github.com/floragunncom/search-guard/blob/master/sgconfig/sg_action_groups.yml
    # search-guard-6/sgconfig/sg_action_groups.yml: |-
    #   ...
    # e.g. https://github.com/floragunncom/search-guard/blob/master/sgconfig/sg_roles.yml
    # search-guard-6/sgconfig/sg_roles.yml: |-
    #   # Allows everything, but no changes to searchguard configuration index
    #   sg_all_access:
    #     readonly: true
    #     cluster:
    #       - UNLIMITED
    #     indices:
    #       '*':
    #         '*':
    #           - UNLIMITED
    #     tenants:
    #       admin_tenant: RW
    #
    #   # Allows each user to access own named index
    #   sg_own_index:
    #     cluster:
    #       - CLUSTER_COMPOSITE_OPS
    #     indices:
    #       '${user_name}':
    #         '*':
    #           - INDICES_ALL
    # e.g. https://github.com/floragunncom/search-guard/blob/master/sgconfig/sg_roles_mapping.yml
    # search-guard-6/sgconfig/sg_roles_mapping.yml: |-
    #   # empty configuration
    #   sg_all_access:
    #     readonly: true
    #     backendroles:
    #       - admin
    #
    #   sg_own_index:
    #     users:
    #       - '*'

## TLS support. Generate certificates with OpenSSL
tls:
  enabled: false
  # files:
  #   # Server Certificate
  #   server_cert.pem: |-
  #     ...
  #   # Server Key
  #   # Issue: Ensure the key is PKCS#8 w/ http://netty.io/wiki/sslcontextbuilder-and-private-key.html
  #   server_key.pem: |-
  #     ...
  #   # Certificate Authority Chain
  #   ca_cert.pem: |-
  #     ...
  #   # Certificate Authority Revocation List
  #   ca_crl.pem: |-
  #     ...

client:
  name: client
  replicas: 2
  heapSize: "512m"
  antiAffinity: "soft"
  # additionalAffinities:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #         - matchExpressions:
  #           - key: cloud.google.com/gke-preemptible
  #             operator: In
  #             values:
  #               - "true"
  tolerations: []
  budget:
    maxUnavailable: 1
  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate
  service:
    #annotations: {}
    type: ClusterIP
    # If using type: LoadBalancer
    #loadBalancerIP: 0.0.0.0
    #loadBalancerSourceRanges:
    #  - 0.0.0.0/0
    externalIPs: []
  resources:
    limits:
      cpu: "1"
      # memory: "1024Mi"
    requests:
      cpu: "25m"
      memory: "512Mi"
  # podAnnotations:
  #   example: client-foo

master:
  name: master
  replicas: 2
  exposeHttp: false
  heapSize: "512m"
  readinessProbe: true
  antiAffinity: "soft"
  # additionalAffinities:
  #   nodeAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #       - weight: 50
  #         preference:
  #           matchExpressions:
  #             - key: cloud.google.com/gke-preemptible
  #               operator: NotIn
  #               values:
  #                 - "true"
  # updateStrategy:
  #   type: RollingUpdate
  #   rollingUpdate:
  #     partition: 1
  tolerations: []
  budget:
    maxUnavailable: 1
  persistence:
    enabled: true
    name: data
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 4Gi
  resources:
    limits:
      cpu: "1"
      # memory: "1024Mi"
    requests:
      cpu: "25m"
      memory: "512Mi"
  # podAnnotations:
  #   example: master-foo

data:
  name: data
  replicas: 2
  exposeHttp: false
  heapSize: "1536m"
  terminationGracePeriodSeconds: 3600
  antiAffinity: "soft"
  # additionalAffinities:
  #   nodeAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #       - weight: 50
  #         preference:
  #           matchExpressions:
  #             - key: cloud.google.com/gke-preemptible
  #               operator: NotIn
  #               values:
  #                 - "true"
  # updateStrategy:
  #   type: RollingUpdate
  #   rollingUpdate:
  #     partition: 1
  tolerations: []
  budget:
    maxUnavailable: 1
  persistence:
    enabled: true
    name: data
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 4Gi
  resources:
    limits:
      cpu: "1"
      # memory: "2048Mi"
    requests:
      cpu: "25m"
      memory: "1536Mi"
  # podAnnotations:
  #   example: data-foo

## Install Default RBAC roles and bindings
rbac:
  create: false
