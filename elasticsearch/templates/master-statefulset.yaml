apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "elasticsearch.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.master.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "elasticsearch.master.fullname" . }}
spec:
  serviceName: {{ template "elasticsearch.master.fullname" . }}
  replicas: {{ .Values.master.replicas }}
  {{- if .Values.master.updateStrategy }}
  updateStrategy:
    {{- toYaml .Values.master.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "elasticsearch.name" . }}
        component: "{{ .Values.master.name }}"
        release: {{ .Release.Name }}
      annotations:
        {{- include "elasticsearch.annotations" . | nindent 8 }}
        {{- if .Values.master.podAnnotations }}
          {{- toYaml .Values.master.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "elasticsearch.fullname" . }}
      securityContext:
        fsGroup: 1000  # elasticsearch
      affinity:
        {{- if .Values.master.additionalAffinities }}
        {{- toYaml .Values.master.additionalAffinities | nindent 8 }}
        {{- end }}
        {{- if eq .Values.master.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: "{{ template "elasticsearch.name" . }}"
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.master.name }}"
        {{- else if eq .Values.master.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: "{{ template "elasticsearch.name" . }}"
                    release: "{{ .Release.Name }}"
                    component: "{{ .Values.master.name }}"
        {{- end }}
      initContainers:
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
      - name: sysctl
        image: busybox
        command:
          - sysctl
          - -w
          - vm.max_map_count=262144
        securityContext:
          privileged: true
      {{- if .Values.plugins.enabled }}
      - name: plugins
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        command:
          - /bin/sh
          - -c
          - |-
            {{- if semverCompare "^2.x" .Values.appVersion }}
            {{ if .Values.plugins.remove }}bin/plugin remove {{ join " && bin/plugin remove " .Values.plugins.remove }}{{ end }}
            {{ if .Values.plugins.install }}bin/plugin install {{ join " && bin/plugin install " .Values.plugins.install }}{{ end }}
            {{- end }}
            {{- if semverCompare ">= 5.x" .Values.appVersion }}
            {{ if .Values.plugins.remove }}bin/elasticsearch-plugin remove {{ join " && bin/elasticsearch-plugin remove " .Values.plugins.remove }}{{ end }}
            {{ if .Values.plugins.install }}bin/elasticsearch-plugin install -b {{ join " && bin/elasticsearch-plugin install -b " .Values.plugins.install }}{{ end }}
            {{- end }}
            cp -Rf /usr/share/elasticsearch/plugins/. /plugins/
        volumeMounts:
        - mountPath: /plugins
          name: plugins
      {{- end }}
      containers:
      - name: elasticsearch
        env:
        - name: DISCOVERY_SERVICE
          value: {{ template "elasticsearch.master.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.cluster.kubernetesDomain }}
        - name: NODE_DATA
          value: "false"
        {{- if semverCompare ">= 5.x" .Values.appVersion }}
        - name: NODE_INGEST
          value: "false"
        {{- end }}
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ .Values.master.heapSize }} -Xmx{{ .Values.master.heapSize }}"
        {{- range $key, $value :=  .Values.cluster.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
          {{- toYaml .Values.master.resources | nindent 12 }}
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - curl
                --request GET
                --silent
                --output /dev/null
                {{- if .Values.tls.enabled }}
                --insecure
                --crlfile /usr/share/elasticsearch/config/ca_crl.pem
                --key /usr/share/elasticsearch/config/server_key.pem
                --cacert /usr/share/elasticsearch/config/ca_cert.pem
                --cert /usr/share/elasticsearch/config/server_cert.pem
                {{- end }}
                http{{ if .Values.tls.enabled }}s{{ end }}://127.0.0.1:9200/_cluster/health?local=true
          initialDelaySeconds: 5
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        ports:
        - containerPort: 9300
          name: transport
        {{- if .Values.master.exposeHttp }}
        - containerPort: 9200
          name: http
        {{- end }}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
          readOnly: true
        {{- if semverCompare "^2.x" .Values.appVersion }}
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: config
          subPath: logging.yml
          readOnly: true
        {{- end }}
        {{- if semverCompare ">= 5.x" .Values.appVersion }}
        - mountPath: /usr/share/elasticsearch/config/log4j2.properties
          name: config
          subPath: log4j2.properties
          readOnly: true
        {{- end }}
        {{- if .Values.tls.enabled }}
        {{- range $key := keys .Values.tls.files }}
        - mountPath: /usr/share/elasticsearch/config/{{ $key }}
          name: secret
          subPath: tls-{{ $key | replace "/" "-" }}
          readOnly: true
        {{- end }}
        {{- end }}
        {{- if .Values.searchguard.enabled }}
        {{- range $key := keys .Values.searchguard.files }}
        - mountPath: /usr/share/elasticsearch/plugins/{{ $key }}
          name: secret
          subPath: sg-{{ $key | replace "/" "-" }}
          readOnly: true
        {{- end }}
        {{- end }}
        {{- if .Values.plugins.enabled }}
        - mountPath: /usr/share/elasticsearch/plugins
          name: plugins
        {{- end }}
    {{- with .Values.master.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "elasticsearch.fullname" . }}
      {{- if not .Values.master.persistence.enabled }}
      - name: data
        emptyDir: {}
      {{- end }}
      - name: secret
        secret:
          secretName: {{ template "elasticsearch.fullname" . }}
      {{- if .Values.plugins.enabled }}
      - name: plugins
        emptyDir: {}
      {{- end }}
  {{- if .Values.master.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.data.persistence.name }}
      spec:
        accessModes:
          - {{ .Values.master.persistence.accessMode | quote }}
      {{- if hasKey .Values.master.persistence "storageClass" }}
        storageClassName: {{ .Values.master.persistence.storageClass | quote }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.master.persistence.size | quote }}
  {{- end }}
