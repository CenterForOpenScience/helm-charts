image:
  repository: centerforopenscience/postgres
  tag: 9.6-repmgr
  pullPolicy: Always

master:
  name: master
  resources: {}
  persistence:
    enabled: true
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 8Gi
  service:
    #annotations: {}
    type: ClusterIP
    # If using type: LoadBalancer
    #loadBalancerIP: 0.0.0.0
    #loadBalancerSourceRanges:
    #  - 0.0.0.0/0
    port: 5432
    externalIPs: []
  terminationGracePeriodSeconds: 3600

standby:
  name: standby
  replicaCount: 1
  resources: {}
  persistence:
    enabled: true
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 8Gi
  service:
    #annotations: {}
    type: ClusterIP
    # If using type: LoadBalancer
    #loadBalancerIP: 0.0.0.0
    #loadBalancerSourceRanges:
    #  - 0.0.0.0/0
    port: 5432
    externalIPs: []
  terminationGracePeriodSeconds: 3600

configs: {}

secrets:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_INITDB_ARGS: --data-checksums
  REPMGR_PASSWORD: repmgr

tls:
  enabled: false
  files:
    server.crt: |-
      ...
    server.key: |-
      ...
    # postgresql.crt: |-
    #   ...
    # postgresql.key: |-
    #   ...
    root.crt: |-
      ...
    root.crl: |-
      ...

metrics:
  enabled: false
  image: wrouesnel/postgres_exporter
  imageTag: v0.1.1
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
  ## Define additional custom metrics
  ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file
  #customMetrics:
  #  pg_database:
  #    query: "SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
  #    metrics:
  #      - name:
  #          usage: "LABEL"
  #          description: "Name of the database"
  #      - size_bytes:
  #          usage: "GAUGE"
  #          description: "Size of the database in bytes"

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 256Mi
    cpu: 100m

networkPolicy:
  ## Enable creation of NetworkPolicy resources.
  ##
  enabled: false

  ## The Policy model to apply. When set to false, only pods with the correct
  ## client label will have network access to the port PostgreSQL is listening
  ## on. When true, PostgreSQL will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true
