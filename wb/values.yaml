# Default values for wb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: quay.io/centerforopenscience/waterbutler
  tag: develop
  pullPolicy: Always

antiAffinity: soft

# strategy:
#   rollingUpdate:
#     maxSurge: 25%
#     maxUnavailable: 25%
#   type: RollingUpdate

budget:
  minAvailable: 0

nginx:
  workerCount: 1
  image:
    repository: quay.io/centerforopenscience/nginx
    tag: latest
    pullPolicy: Always
  resources: {}
    # limits:
    #   cpu: 1
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  proxySourceRanges: []
    # - 130.211.0.0/22
    # - 35.191.0.0/16
  realIpHeader: X-Real-IP
  realIpRecursive: "off"
  vts:
    enabled: false
    internalPort: 18080
    statusZoneSize: 10m
    defaultFilterKey: "$geoip_country_code country::*"
  readTimeout: 60 # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout

tornado:
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  volumeMounts: []
  env: {}

worker:
  concurrency: 2
  logLevel: INFO
  maxTasksPerChild: 5
  resources: {}
    # limits:
    #   cpu: 2
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  volumeMounts: []
  env: {}

horizontalPodAutoscaler:
  enabled: false
  maxReplicas: 3
  targetCPUUtilizationPercentage: 90

service:
  name: http
  type: ClusterIP
  # If using type: LoadBalancer
  #loadBalancerIP: 0.0.0.0
  #loadBalancerSourceRanges:
  #  - 0.0.0.0/0
  externalPort: 7777
  internalPort: 80

ingress:
  enabled: false
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # ingress.kubernetes.io/proxy-body-size: 9999m
    # nginx.org/client-max-body-size: 9999m
  paths:
    - /
  hosts:
  # - staging-files.osf.io
  tls:
  # - secretName: osf-io-tls
  #   hosts:
  #   - staging-files.osf.io

certificate:
  enabled: false
  name: cert
  # WORKAROUND: Ingress deploy blocked to GLBC due to race condition w/ missing TLS certificate
  # - Issue: https://github.com/jetstack/cert-manager/issues/606
  # - PR: https://github.com/kubernetes/ingress-gce/pull/388
  tls: true
  # issuerRef:
  #   name: letsencrypt-prod
  #   kind: ClusterIssuer
  # commonName: example.org
  # dnsNames:
  #   - example.org
  #   - subdomain.example.org
  # acmeConfig:
  #   http01: {}
  #     # ingress: ''
  #   domains:
  #     - example.org
  #     - subdomain.example.org

networkPolicy:
  enabled: false
  # Allows external access to the pod, otherwise access is restricted to
  # clients with the explicit label.
  allowExternal: true
  egress: {}
    # - to:
    #   - namespaceSelector: {}
    #   ports:
    #     - port: 53  # dns
    #       protocol: TCP
    #     - port: 53  # dns
    #       protocol: UDP
    # - to:
    #   - ipBlock:
    #       cidr: 0.0.0.0/0
    #       except:
    #         - 10.0.0.0/8
    #         - 172.16.0.0/12
    #         - 192.168.0.0/16
    #   ports:
    #     - port: 80  # http
    #       protocol: TCP
    #     - port: 443  # https
    #       protocol: TCP

configEnvs: {}

configFiles: {}

secretEnvs: {}

secretFiles:
  settings.json: |-
    {
      "ANALYTICS": {
        "MFR_DOMAIN": "https://staging-mfr.osf.io",
        "KEEN": {
          "PRIVATE": {
            "PROJECT_ID": "",
            "WRITE_KEY": ""
          },
          "PUBLIC": {
            "PROJECT_ID": "",
            "WRITE_KEY": ""
          }
        }
      },
      "GITHUB_PROVIDER_CONFIG": {
        "MOVE_MESSAGE": "Moved via the Open Science Framework",
        "COPY_MESSAGE": "Copied via the Open Science Framework",
        "UPLOAD_FILE_MESSAGE": "Added via the Open Science Framework",
        "UPDATE_FILE_MESSAGE": "Updated via the Open Science Framework",
        "DELETE_FILE_MESSAGE": "Deleted via the Open Science Framework",
        "DELETE_FOLDER_MESSAGE": "Deleted via the Open Science Framework"
      },
      "OSFSTORAGE_PROVIDER_CONFIG": {
        "FILE_PATH_PENDING": "/data/pending",
        "FILE_PATH_COMPLETE": "/data/complete",
        "HMAC_SECRET": "",
        "RUN_TASKS": true
      },
      "SERVER_CONFIG": {
        "DOMAIN": "https://staging-files.osf.io",
        "ADDRESS": "0.0.0.0",
        "PORT": 7777,
        "DEBUG": false,
        "XHEADERS": true,
        "CORS_ALLOW_ORIGIN": [
          "https://staging.osf.io",
          "https://staging-mfr.osf.io"
        ],
        "HMAC_SECRET": "",
        "MAX_BUFFER_SIZE": 157286400,
        "AUTH_HANDLERS": [
          "osf"
        ]
      },
      "OSF_AUTH_CONFIG": {
        "API_URL": "https://staging.osf.io/api/v1/files/auth/",
        "JWE_SALT": "",
        "JWE_SECRET": "",
        "JWT_SECRET": ""
      },
      "TASKS_CONFIG": {
        "BROKER_URL": "amqp://guest:guest@127.0.0.1:5672//",
        "ADHOC_BACKEND_PATH": "/pickles"
      },
      "SENTRY_DSN": "",
      "LOGGING": {
        "version": 1,
        "disable_existing_loggers": false,
        "formatters": {
          "defaultFormatter": {
            "()": "waterbutler.core.logging.MaskFormatter",
            "format": "[%(asctime)s][%(levelname)s][%(name)s]: %(message)s",
            "pattern": "(?<=cookie=)(.*?)(?=&|$)",
            "mask": "***"
          }
        },
        "handlers": {
          "consoleHandler": {
            "class": "logging.StreamHandler",
            "level": "INFO",
            "formatter": "defaultFormatter"
          }
        },
        "loggers": {
          "": {
            "handlers": [
              "consoleHandler"
            ],
            "level": "INFO",
            "propagate": false
          }
        },
        "root": {
          "level": "INFO",
          "handlers": [
            "consoleHandler"
          ]
        }
      }
    }

maintenance:
  enabled: false

rabbitmq:
  image:
    repository: rabbitmq
    tag: 3-management
    pullPolicy: Always

  rabbitmqUsername: guest
  rabbitmqPassword: guest
  rabbitmqNodePort: 5672
  rabbitmqNodeType: stats
  rabbitmqNodeName: rabbit@localhost
  # rabbitmqClusternodename:
  rabbitmqVhost: /
  rabbitmqManagerPort: 15672

  resources:
    requests:
      memory: 256Mi
      cpu: 100m

redis:
  enabled: true

  image:
    repository: redis
    tag: alpine
    pullPolicy: IfNotPresent

  secretEnvs: {}
    # REDIS_PASSWORD: ''

  ## Redis command arguments
  ##
  ## Can be used to specify command line arguments, for example:
  ##
  ## args:
  ##  - --maxmemory 200mb
  ##  - --maxmemory-policy volatile-ttl
  args:

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: false

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## redis data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 256Mi
    #requests:
    #  cpu: 100m
    #  memory: 256Mi


    

