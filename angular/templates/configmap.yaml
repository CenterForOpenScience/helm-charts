apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "angular.fullname" . }}
  labels:
    app: {{ template "angular.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
{{- define "angular.inlineconfigs" }}
nginx.conf: |-
  user nginx;
  worker_processes 1;

  pid /var/run/nginx.pid;

  error_log /var/log/nginx/error.log warn;

  events {
      worker_connections 1024;
  }

  http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format main '$remote_addr - $upstream_cache_status $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" '
                      'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
      access_log /var/log/nginx/access.log main;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 620s;
      keepalive_requests 10000;
      types_hash_max_size 2048;
      server_tokens off;

      gzip on;
      gzip_disable "MSIE [1-6]\.(?!.*SV1)";
      gzip_comp_level 2;
      gzip_min_length 512;
      gzip_proxied any;
      gzip_vary on;
      gzip_types text/plain text/css image/svg+xml application/javascript application/x-javascript text/xml application/xml text/javascript application/json application/xml+rss application/vnd.api+json;

      server {
          listen {{ .Values.service.internalPort }};
          server_name _;

          root /static;
          index index.html;

          if ($http_x_forwarded_proto = "http") {
              return 301 https://$host$request_uri;
          }

          location = /healthz {
              access_log off;
              return 200;
          }

          location / {
              add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate";
              add_header Expires "-1";
              add_header Pragma "no-cache";

              try_files $uri $uri/ /index.html;
          }
      }
  }
{{- end -}}
{{- range $key, $value := .Values.configEnvs }}
  {{ $key }}: {{ $value | quote }}
{{- end }}
{{- range $key, $value := merge .Values.configFiles (include "angular.inlineconfigs" . | fromYaml) ((.Files.Glob "files/*").AsConfig | fromYaml) }}
  {{ $key }}: |-
    {{- $value | nindent 4 }}
{{- end }}
