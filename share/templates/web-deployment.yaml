{{- if .Values.web.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "share.web.fullname" . }}
  labels:
    app: {{ template "share.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: "{{ .Values.web.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "share.name" . }}
      component: "{{ .Values.web.name }}"
      release: {{ .Release.Name }}
  replicas: {{ .Values.web.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "share.name" . }}
        component: "{{ .Values.web.name }}"
        release: {{ .Release.Name }}
      annotations:
        {{- include "share.deploymentAnnotations" . | indent 8 }}
    spec:
      affinity:
        {{- if .Values.web.additionalAffinities }}
        {{- toYaml .Values.web.additionalAffinities | nindent 8 }}
        {{- end }}
        {{- if eq .Values.web.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "share.name" . }}
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.web.name }}"
        {{- else if eq .Values.web.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: {{ template "share.name" . }}
                    release: "{{ .Release.Name }}"
                    component: "{{ .Values.web.name }}"
        {{- end }}
      initContainers:
        - name: collectstatic
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - python
            - manage.py
            - collectstatic
            - --noinput
          volumeMounts:
            - mountPath: /code/static
              name: static
      containers:
        - name: nginx
          image: "{{ .Values.web.nginx.image.repository }}:{{ .Values.web.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.web.nginx.image.pullPolicy }}
          command:
            - nginx
            - -c
            - /etc/nginx/nginx.conf
            - -g
            - daemon off;
          ports:
            - name: http
              containerPort: {{ .Values.web.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.web.service.internalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /static
              name: static
            - mountPath: /etc/nginx/nginx.conf
              name: config
              subPath: nginx.conf
              readOnly: true
            - mountPath: /usr/share/nginx/html/robots.txt
              name: config
              subPath: robots.txt
              readOnly: true
          resources:
            {{- toYaml .Values.web.nginx.resources | nindent 12 }}
        - name: uwsgi
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              PREFIX=''
              if [ -f /code/newrelic.ini ]; then
                PREFIX='newrelic-admin run-program'
              fi
              $PREFIX uwsgi --ini /etc/uwsgi/uwsgi.ini --socket :{{ .Values.web.service.externalPort }}
          env:
            {{- include "share.environment" . | nindent 12 }}
            {{- range $key, $value := .Values.web.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: wsgi
              containerPort: {{ .Values.web.service.externalPort }}
            - name: stats
              containerPort: 1717
          readinessProbe:
            tcpSocket:
              port: {{ .Values.web.service.externalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /etc/uwsgi/uwsgi.ini
              name: config
              subPath: uwsgi.ini
              readOnly: true
            {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
            {{- if .Values.web.volumeMounts }}
            {{- toYaml .Values.web.volumeMounts | nindent 12 }}
            {{- end }}
          {{- if .Values.web.resources }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: static
          emptyDir: {}
        - name: config
          configMap:
            name: {{ template "share.fullname" . }}
        - name: secret
          secret:
            secretName: {{ template "share.fullname" . }}
        - name: elasticsearch-certs
          secret:
            secretName: {{ .Values.elasticsearchCertificateSecret }}
{{- end -}}
