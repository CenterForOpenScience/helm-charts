# Default values for lookit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: quay.io/centerforopenscience/share
  tag: develop
  pullPolicy: Always

beat:
  enabled: true
  name: beat

  logLevel: DEBUG

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

web:
  enabled: true
  name: web
  replicaCount: 1

  antiAffinity: soft

  budget:
    minAvailable: 0

  nginx:
    image:
      repository: nginx
      tag: alpine
      pullPolicy: Always
    resources: {}
      #limits:
      #  cpu: "1"
      #  memory: 128Mi
      #requests:
      #  cpu: 100m
      #  memory: 128Mi

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

  service:
    name: http
    type: ClusterIP
    externalPort: 8000
    internalPort: 80

  ingress:
    enabled: false
    # Used to create Ingress record (should used with service.type: ClusterIP).
    hosts:
      - chart-example.local
    paths:
      - /
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: 'true'
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local

  certificate:
    enabled: false
    name: cert
    # WORKAROUND: Ingress deploy blocked to GLBC due to race condition w/ missing TLS certificate
    # - Issue: https://github.com/jetstack/cert-manager/issues/606
    # - PR: https://github.com/kubernetes/ingress-gce/pull/388
    tls: true
    # issuerRef:
    #   name: letsencrypt-prod
    #   kind: ClusterIssuer
    # commonName: example.org
    # dnsNames:
    #   - example.org
    #   - subdomain.example.org
    # acmeConfig:
    #   http01: {}
    #     # ingress: ''
    #   domains:
    #     - example.org
    #     - subdomain.example.org

  env: {}

  volumeMounts: []

indexer:
  enabled: true
  name: indexer
  replicaCount: 1

  antiAffinity: soft

  budget:
    minAvailable: 0

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

  env: {}

  volumeMounts: []

worker:
  enabled: true
  name: worker
  replicaCount: 1

  antiAffinity: soft

  budget:
    minAvailable: 0

  concurrency: 5
  logLevel: INFO
  maxTasksPerChild: 5
  # queues: ...

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

  env: {}

  volumeMounts: []

migration:
  enabled: true
  name: migration

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

  env: {}

  volumeMounts: []

configEnvs:
  DEBUG: ""
  DJANGO_SETTINGS_MODULE: project.settings
  ALLOWED_HOSTS: "*"

configFiles: {}
  # Override configmap files here (and delete the {} above), e.g.:
  #robots.txt: |-
  #  User-agent: *
  #  Disallow: /

secretEnvs: {}
  # BYPASS_THROTTLE_TOKEN: abc123

secretFiles: {}
  # googleAppCreds.json: |-
  #   ...

# volumeMounts:
#   - mountPath: /code/project/settings/local.py
#     name: secret-volume
#     subPath: local.py
#     readOnly: true
#   - mountPath: /etc/googleAppCreds.json
#     name: secret-volume
#     subPath: googleAppCreds.json
#     readOnly: true

share-web:
  enabled: false
  service:
    name: shareweb
    externalPort: 80

postgresql:
  enabled: true
  standby:
    enabled: false
  secrets:
    POSTGRES_DB: share
    POSTGRES_USER: share
    POSTGRES_PASSWORD: share

rabbitmq:
  enabled: true
  secretEnvs:
    RABBITMQ_DEFAULT_USER: guest
    RABBITMQ_DEFAULT_PASS: guest

elasticsearch:
  enabled: true

  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: "5.6.7"
    pullPolicy: "Always"

  rbac:
    enabled: true

  plugins:
    enabled: true
    remove:
      - x-pack

  cluster:
    env:
      MINIMUM_MASTER_NODES: "1"
      EXPECTED_MASTER_NODES: "1"
      RECOVER_AFTER_MASTER_NODES: "1"

  tls:
    enabled: false

  client:
    name: client
    replicas: 1
    serviceType: ClusterIP
    heapSize: "128m"
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: "512Mi"
      # requests:
      #   cpu: "25m"
      #   memory: "256Mi"

  master:
    name: master
    replicas: 1
    heapSize: "128m"
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: "512Mi"
      # requests:
      #   cpu: "25m"
      #   memory: "256Mi"

  data:
    name: data
    replicas: 1
    heapSize: "1536m"
    terminationGracePeriodSeconds: 3600
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: "512Mi"
      # requests:
      #   cpu: "25m"
      #   memory: "256Mi"
