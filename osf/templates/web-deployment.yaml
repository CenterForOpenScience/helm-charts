{{- if .Values.web.enabled -}}
{{- $osfPreprints := (index .Values "osf-preprints") }}
{{- $osfRegistries := (index .Values "osf-registries") }}
{{- $osfReviews := (index .Values "osf-reviews") }}
{{- $osfWeb := (index .Values "osf-web") }}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "osf.web.fullname" . }}
  labels:
    app: {{ template "osf.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: "{{ .Values.web.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "osf.name" . }}
        component: "{{ .Values.web.name }}"
        release: {{ .Release.Name }}
      annotations:
        {{- include "osf.deploymentAnnotations" . | indent 8 }}
        # Init containers not updated on upgrade : https://github.com/kubernetes/helm/issues/2702
        {{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "8") }}
        {{- if not .Values.collectstatic.enabled }}
        pod.beta.kubernetes.io/init-containers: |-
          [
              {
                  "name": "{{ .Values.collectstatic.name }}",
                  "image": "{{ .Values.image.repository }}:{{ .Values.image.tag }}",
                  "imagePullPolicy": "{{ .Values.image.pullPolicy }}",
                  "command": [
                      "/bin/sh",
                      "-c",
                      "mkdir -p /static/code/website && cp -Rf /code/website/static /static/code/website && find /code/addons/ -type f | grep -i /static/ | xargs -i cp -f --parents {} /static/"
                  ],
                  "volumeMounts": [
                      {"name":"static-volume","mountPath":"/static"}
                  ]
              }
          ]
        {{- end }}
        {{- end }}
    spec:
      {{- if or (gt .Capabilities.KubeVersion.Major "1") (and (eq .Capabilities.KubeVersion.Major "1") (ge .Capabilities.KubeVersion.Minor "8")) }}
      {{- if not .Values.collectstatic.enabled }}
      initContainers:
        - name: {{ .Values.collectstatic.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - mkdir -p /static/code/website &&
              cp -Rf /code/website/static /static/code/website &&
              find /code/addons/ -type f | grep -i /static/ | xargs -i cp -f --parents {} /static/
          volumeMounts:
            - mountPath: /static
              name: static-volume
      {{- end }}
      {{- end }}
      containers:
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          command:
            - nginx
            - -c
            - /etc/nginx/nginx.conf
            - -g
            - daemon off;
          ports:
            - containerPort: {{ .Values.web.service.internalPort }}
              name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.web.service.internalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /static
              name: static-volume
              readOnly: true
            {{- if .Values.web.nginx.cache.enabled }}
            - mountPath: /cache
              name: cache-volume
            {{- end }}
            - mountPath: /etc/nginx/nginx.conf
              name: config-volume
              subPath: web-nginx.conf
              readOnly: true
            - mountPath: /etc/nginx/conf.d/default.conf
              name: config-volume
              subPath: default.conf
              readOnly: true
            - mountPath: /usr/share/nginx/html/robots.txt
              name: config-volume
              subPath: web-robots.txt
              readOnly: true
            {{- if $osfPreprints.enabled }}
            - mountPath: /etc/nginx/conf.d/osf-preprints.conf
              name: config-volume
              subPath: web-nginx-osf-preprints.conf
              readOnly: true
            {{- end }}
            {{- if $osfRegistries.enabled }}
            - mountPath: /etc/nginx/conf.d/osf-registries.conf
              name: config-volume
              subPath: web-nginx-osf-registries.conf
              readOnly: true
            {{- end }}
            {{- if $osfReviews.enabled }}
            - mountPath: /etc/nginx/conf.d/osf-reviews.conf
              name: config-volume
              subPath: web-nginx-osf-reviews.conf
              readOnly: true
            {{- end }}
            {{- if $osfWeb.enabled }}
            - mountPath: /etc/nginx/conf.d/osf-web.conf
              name: config-volume
              subPath: web-nginx-osf-web.conf
              readOnly: true
            {{- end }}
            {{- if .Values.prerender.enabled }}
            - mountPath: /etc/nginx/prerender.conf
              name: config-volume
              subPath: web-nginx-prerender.conf
              readOnly: true
            {{- end }}
            {{- if .Values.web.nginx.volumeMounts }}
            {{- toYaml .Values.web.nginx.volumeMounts | nindent 12 }}
            {{- end }}
          {{- if .Values.web.nginx.resources }}
          resources:
            {{- toYaml .Values.web.nginx.resources | nindent 12 }}
          {{- end }}
        - name: uwsgi
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              PREFIX=''
              if [ -f /code/newrelic.ini ]; then
                PREFIX='newrelic-admin run-program'
              fi
              $PREFIX uwsgi --ini /etc/uwsgi/uwsgi.ini --socket :{{ .Values.web.service.externalPort }}
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: api.base.settings
            {{- if $osfPreprints.enabled }}
            - name: OSF_PREPRINTS_URL
              value: http://{{ $osfPreprints.service.name }}:{{ $osfPreprints.service.externalPort }}/
            {{- end }}
            {{- if $osfRegistries.enabled }}
            - name: OSF_REGISTRIES_URL
              value: http://{{ $osfRegistries.service.name }}:{{ $osfRegistries.service.externalPort }}/
            {{- end }}
            {{- if $osfReviews.enabled }}
            - name: OSF_REVIEWS_URL
              value: http://{{ $osfReviews.service.name }}:{{ $osfReviews.service.externalPort }}/
            {{- end }}
            {{- if $osfWeb.enabled }}
            - name: OSF_WEB_URL
              value: http://{{ $osfWeb.service.name }}:{{ $osfWeb.service.externalPort }}/
            {{- end }}
            {{- include "osf.environment" . | indent 12 }}
            {{- range $key, $value := .Values.web.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: wsgi
              containerPort: {{ .Values.web.service.externalPort }}
            - name: stats
              containerPort: 1717
          readinessProbe:
            tcpSocket:
              port: {{ .Values.web.service.externalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /etc/uwsgi/uwsgi.ini
              name: config-volume
              subPath: web-uwsgi.ini
              readOnly: true
            {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
            {{- if .Values.web.volumeMounts }}
            {{- toYaml .Values.web.volumeMounts | nindent 12 }}
            {{- end }}
          {{- if .Values.web.resources }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: static-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: {{ template "osf.fullname" . }}
        - name: secret-volume
          secret:
            secretName: {{ template "osf.fullname" . }}
        {{- if .Values.web.nginx.cache.enabled }}
        - name: cache-volume
          emptyDir: {}
        {{- end }}
    {{- if .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.web.nodeSelector | nindent 8 }}
    {{- end }}
{{- end -}}
