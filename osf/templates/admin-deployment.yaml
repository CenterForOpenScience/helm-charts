{{- if .Values.admin.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "osf.admin.fullname" . }}
  labels:
    app: {{ template "osf.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: "{{ .Values.admin.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "osf.name" . }}
      component: "{{ .Values.admin.name }}"
      release: {{ .Release.Name }}
  replicas: {{ .Values.admin.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "osf.name" . }}
        component: "{{ .Values.admin.name }}"
        release: {{ .Release.Name }}
      annotations:
        {{- include "osf.deploymentAnnotations" . | nindent 8 }}
    spec:
      affinity:
        {{- if .Values.admin.additionalAffinities }}
        {{- toYaml .Values.admin.additionalAffinities | nindent 8 }}
        {{- end }}
        {{- if eq .Values.admin.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "osf.name" . }}
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.admin.name }}"
        {{- else if eq .Values.admin.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: {{ template "osf.name" . }}
                    release: "{{ .Release.Name }}"
                    component: "{{ .Values.admin.name }}"
        {{- end }}
      initContainers:
        - name: chown
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - chown -R www-data:www-data /log
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /log
              name: log
        {{- if not .Values.collectstatic.enabled }}
        - name: {{ .Values.collectstatic.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              mkdir -p /static/code/admin
              cp -Rf /code/static_root/* /static/code/admin
          volumeMounts:
            - mountPath: /static
              name: static
        {{- end }}
        {{- include "osf.certificates.initContainer" . | nindent 8 }}
      containers:
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          command:
            - nginx
            - -c
            - /etc/nginx/nginx.conf
            - -g
            - daemon off;
          ports:
            - name: http
              containerPort: {{ .Values.admin.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.admin.service.internalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /static
              name: static
            - mountPath: /etc/nginx/nginx.conf
              name: config
              subPath: admin-nginx.conf
              readOnly: true
            - mountPath: /etc/nginx/conf.d/default.conf
              name: config
              subPath: default.conf
              readOnly: true
            - mountPath: /usr/share/nginx/html/robots.txt
              name: config
              subPath: admin-robots.txt
              readOnly: true
            {{- if .Values.admin.nginx.volumeMounts }}
            {{- toYaml .Values.admin.nginx.volumeMounts | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.admin.nginx.resources | nindent 12 }}
        - name: uwsgi
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              set -e
              su-exec www-data python3 manage.py check_deploy_ready
              PREFIX=''
              if [ -f /code/newrelic.ini ]; then
                PREFIX='newrelic-admin run-program'
              fi
              $PREFIX uwsgi --ini /etc/uwsgi/uwsgi.ini --socket :{{ .Values.admin.service.externalPort }}
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: admin.base.settings
            {{- include "osf.environment" . | nindent 12 }}
            {{- range $key, $value := .Values.admin.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: wsgi
              containerPort: {{ .Values.admin.service.externalPort }}
            - name: stats
              containerPort: 1717
          readinessProbe:
            tcpSocket:
              port: {{ .Values.admin.service.externalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /log
              name: log
            - mountPath: /etc/uwsgi/uwsgi.ini
              name: config
              subPath: admin-uwsgi.ini
              readOnly: true
            {{- include "osf.volumeMounts" . | nindent 12 }}
            {{- if .Values.admin.volumeMounts }}
            {{- toYaml .Values.admin.volumeMounts | nindent 12 }}
            {{- end }}
          {{- if .Values.admin.resources }}
          resources:
            {{- toYaml .Values.admin.resources | nindent 12 }}
          {{- end }}
      volumes:
        {{- include "osf.volumes" . | nindent 8 }}
        - name: static
          emptyDir: {}
        - name: log
          {{- if .Values.admin.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.admin.persistence.existingClaim | default (include "osf.admin.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- if .Values.admin.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.admin.nodeSelector | nindent 8 }}
      {{- end }}
{{- end -}}
