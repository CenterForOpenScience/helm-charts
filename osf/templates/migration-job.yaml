{{- if .Values.migration.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "osf.migration.fullname" . }}-{{ .Release.Time.Seconds }}
  labels:
    app: {{ template "osf.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: "{{ .Values.migration.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  activeDeadlineSeconds: 900
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app: {{ template "osf.name" . }}
        component: "{{ .Values.migration.name }}"
        release: {{ .Release.Name }}
      annotations:
        # Init containers not updated on upgrade : https://github.com/kubernetes/helm/issues/2702
        {{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "8") }}
        pod.beta.kubernetes.io/init-containers: |-
          {{- (include "osf.migration.initContainers" . | fromYaml).initContainers | toJson | nindent 10 }}
        {{- end }}
    spec:
      restartPolicy: Never
      {{- if or (gt .Capabilities.KubeVersion.Major "1") (and (eq .Capabilities.KubeVersion.Major "1") (ge .Capabilities.KubeVersion.Minor "8")) }}
      {{- include "osf.migration.initContainers" . | nindent 6 }}
      {{- end }}
      containers:
        - name: {{ .Values.migration.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              PREFIX=''
              if [ -f /code/newrelic.ini ]; then
                PREFIX='newrelic-admin run-program'
              fi
              $PREFIX python manage.py migrate
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: api.base.settings
            {{- include "osf.environment" . | nindent 12 }}
            {{- range $key, $value := .Values.migration.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if or .Values.volumeMounts .Values.migration.volumeMounts }}
          volumeMounts:
            - mountPath: /log
              name: log
            {{- include "osf.volumeMounts" . | nindent 12 }}
            {{- if .Values.migration.volumeMounts }}
            {{- toYaml .Values.migration.volumeMounts | nindent 12 }}
            {{- end }}
          {{- end }}
      volumes:
        {{- include "osf.volumes" . | nindent 8 }}
        - name: log
          {{- if .Values.migration.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.migration.persistence.existingClaim | default (include "osf.migration.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- if .Values.migration.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.migration.nodeSelector | nindent 8 }}
      {{- end }}
{{- end -}}
