{{- if .Values.api.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "osf.api.fullname" . }}
  labels:
    app: {{ template "osf.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: "{{ .Values.api.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "osf.name" . }}
      component: "{{ .Values.api.name }}"
      release: {{ .Release.Name }}
  replicas: {{ .Values.api.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "osf.name" . }}
        component: "{{ .Values.api.name }}"
        release: {{ .Release.Name }}
      annotations:
        {{- include "osf.deploymentAnnotations" . | nindent 8 }}
    spec:
      affinity:
        {{- if .Values.api.additionalAffinities }}
        {{- toYaml .Values.api.additionalAffinities | nindent 8 }}
        {{- end }}
        {{- if eq .Values.api.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "osf.name" . }}
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.api.name }}"
        {{- else if eq .Values.api.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: {{ template "osf.name" . }}
                    release: "{{ .Release.Name }}"
                    component: "{{ .Values.api.name }}"
        {{- end }}
      {{- if or (not .Values.collectstatic.enabled) .Values.tls.enabled }}
      initContainers:
        {{- if not .Values.collectstatic.enabled }}
        - name: {{ .Values.collectstatic.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              mkdir -p /static/code/api
              cp -Rf /code/api/static /static/code/api
          volumeMounts:
            - mountPath: /static
              name: static
        {{- end }}
        {{- include "osf.certificates.initContainer" . | nindent 8 }}
      {{- end }}
      containers:
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          command:
            - nginx
            - -c
            - /etc/nginx/nginx.conf
            - -g
            - daemon off;
          ports:
            - name: http
              containerPort: {{ .Values.api.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.api.service.internalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /static
              name: static
            - mountPath: /etc/nginx/nginx.conf
              name: config
              subPath: api-nginx.conf
              readOnly: true
            - mountPath: /etc/nginx/conf.d/default.conf
              name: config
              subPath: default.conf
              readOnly: true
            - mountPath: /usr/share/nginx/html/robots.txt
              name: config
              subPath: api-robots.txt
              readOnly: true
            {{- if .Values.api.nginx.volumeMounts }}
            {{- toYaml .Values.api.nginx.volumeMounts | nindent 12 }}
            {{- end }}
          {{- if .Values.api.nginx.resources }}
          resources:
            {{- toYaml .Values.api.nginx.resources | nindent 12 }}
          {{- end }}
        - name: uwsgi
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              set -e
              su-exec www-data python3 manage.py check_deploy_ready
              PREFIX=''
              if [ -f /code/newrelic.ini ]; then
                PREFIX='newrelic-admin run-program'
              fi
              {{- if .Values.api.uwsgi.listenQueueSize }}
                  POSTFIX='--listen {{ .Values.api.uwsgi.listenQueueSize }}'
              {{- else }}
                  POSTFIX=''
              {{- end}}
              $PREFIX uwsgi --ini /etc/uwsgi/uwsgi.ini --socket :{{ .Values.api.service.externalPort }} $POSTFIX
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: api.base.settings
            {{- include "osf.environment" . | nindent 12 }}
            {{- range $key, $value := .Values.api.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: wsgi
              containerPort: {{ .Values.api.service.externalPort }}
            - name: stats
              containerPort: 1717
          readinessProbe:
            tcpSocket:
              port: {{ .Values.api.service.externalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /etc/uwsgi/uwsgi.ini
              name: config
              subPath: api-uwsgi.ini
              readOnly: true
            {{- include "osf.volumeMounts" . | nindent 12 }}
            {{- if .Values.api.volumeMounts }}
            {{- toYaml .Values.api.volumeMounts | nindent 12 }}
            {{- end }}
          {{- if .Values.api.resources }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          {{- end }}
      volumes:
        {{- include "osf.volumes" . | nindent 8 }}
        - name: static
          emptyDir: {}
      {{- if .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.api.nodeSelector | nindent 8 }}
    {{- end }}
{{- end -}}
