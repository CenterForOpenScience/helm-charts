{{- if .Values.purge.enabled -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "osf.purge.fullname" . }}
  labels:
    app: {{ template "osf.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: "{{ .Values.purge.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  schedule: {{ default "0 22 * * 6" .Values.purge.schedule | quote }}
  startingDeadlineSeconds: {{ default 900 .Values.purge.startingDeadlineSeconds }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      activeDeadlineSeconds: {{ default 14400 .Values.purge.activeDeadlineSeconds }}
      template:
        metadata:
          name: "{{ .Release.Name }}"
          labels:
            app: {{ template "osf.name" . }}
            component: "{{ .Values.purge.name }}"
            release: {{ .Release.Name }}
          annotations:
            checksum/secret: {{ include (print $.Template.BasePath "/purge-secret.yaml") . | sha256sum }}
            # Init containers not updated on upgrade : https://github.com/kubernetes/helm/issues/2702
            {{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "8") }}
            pod.alpha.kubernetes.io/init-containers: null
            pod.beta.kubernetes.io/init-containers: null
            {{- end }}
        spec:
          restartPolicy: Never
          initContainers:
            - name: chown
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command:
                - /bin/bash
                - -c
                - chown -R www-data:www-data /log
              securityContext:
                runAsUser: 0
              volumeMounts:
                - mountPath: /log
                  name: log
          {{- include "osf.certificates.initContainer" . | nindent 12 }}
          containers:
            - name: {{ .Values.purge.name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command:
                - /bin/sh
                - -c
                - su-exec www-data python3 -m scripts.purge_trashed_files {{- if .Values.purge.num_records }} --num {{ .Values.purge.num_records }} {{- end }}
              env:
                - name: DJANGO_SETTINGS_MODULE
                  value: api.base.settings
                {{- include "osf.purge.environment" . | nindent 16 }}
                {{- range $key, $value := .Values.purge.env }}
                - name: {{ $key }}
                  value: {{ $value | quote }}
                {{- end }}
              {{- if or .Values.volumeMounts .Values.purge.volumeMounts }}
              volumeMounts:
                - mountPath: /log
                  name: log
                {{- include "osf.volumeMounts" . | nindent 16 }}
                {{- if .Values.purge.volumeMounts }}
                {{- toYaml .Values.purge.volumeMounts | nindent 16 }}
                {{- end }}
              {{- end }}
          volumes:
            {{- include "osf.volumes" . | nindent 12 }}
            - name: purge-secret
              secret:
                secretName: {{ include "osf.purge.fullname" .}}
            - name: log
              {{- if .Values.purge.persistence.enabled }}
              persistentVolumeClaim:
                claimName: {{ .Values.purge.persistence.existingClaim | default (include "osf.purge.fullname" .) }}
              {{- else }}
              emptyDir: {}
              {{- end }}
          {{- if .Values.purge.nodeSelector }}
          nodeSelector:
            {{- toYaml .Values.purge.nodeSelector | nindent 12 }}
          {{- end }}
{{- end -}}
