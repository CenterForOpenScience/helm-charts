{{- if .Values.worker.enabled -}}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "osf.worker.fullname" . }}
  labels:
    app: {{ template "osf.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: "{{ .Values.worker.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "osf.name" . }}
        component: "{{ .Values.worker.name }}"
        release: {{ .Release.Name }}
      annotations:
        {{- include "osf.deploymentAnnotations" . | indent 8 }}
        # Init containers not updated on upgrade : https://github.com/kubernetes/helm/issues/2702
        {{- if or (gt .Capabilities.KubeVersion.Major "1") (and (eq .Capabilities.KubeVersion.Major "1") (ge .Capabilities.KubeVersion.Minor "8")) }}
        {{- if not .Values.task.enabled }}
        pod.beta.kubernetes.io/init-containers: |-
          [
              {
                  "name": "chown",
                  "image": "{{ .Values.image.repository }}:{{ .Values.image.tag }}",
                  "imagePullPolicy": "{{ .Values.image.pullPolicy }}",
                  "command": [
                      "/bin/sh",
                      "-c",
                      "chown -R www-data:www-data /log"
                  ],
                  "volumeMounts": [
                      {"name":"log-volume","mountPath":"/log"}
                  ]
              }
          ]
        {{- end }}
        {{- end }}
    spec:
      {{- if or (gt .Capabilities.KubeVersion.Major "1") (and (eq .Capabilities.KubeVersion.Major "1") (ge .Capabilities.KubeVersion.Minor "8")) }}
      {{- if not .Values.task.enabled }}
      initContainers:
        - name: "chown"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - chown -R www-data:www-data /log
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /log
              name: log-volume
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Values.worker.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              PREFIX=''
              if [ -f /code/newrelic.ini ]; then
                PREFIX='newrelic-admin run-program'
              fi
              $PREFIX gosu www-data celery worker --app framework.celery_tasks \
                --concurrency "{{ .Values.worker.concurrency }}" --loglevel "{{ .Values.worker.logLevel }}" \
                --hostname $POD_NAME --without-gossip -Ofair
                {{- if .Values.worker.maxTasksPerChild }} --maxtasksperchild "{{ .Values.worker.maxTasksPerChild }}"{{- end }}
                {{- if .Values.worker.queues }} --queues "{{ .Values.worker.queues }}"{{- end }}
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: api.base.settings
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- include "osf.environment" . | indent 12 }}
            {{- range $key, $value := .Values.worker.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            {{- if not .Values.task.enabled }}
            - mountPath: /log
              name: log-volume
            {{- end }}
            {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
            {{- if .Values.worker.volumeMounts }}
            {{- toYaml .Values.worker.volumeMounts | nindent 12 }}
            {{- end }}
          {{- if .Values.worker.resources }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "osf.fullname" . }}
        - name: secret-volume
          secret:
            secretName: {{ template "osf.fullname" . }}
        {{- if not .Values.task.enabled }}
        - name: log-volume
          emptyDir: {}
        {{- end }}
      {{- if .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.worker.nodeSelector | nindent 8 }}
      {{- end }}
{{- end -}}
