image:
  repository: quay.io/centerforopenscience/osf
  tag: develop
  pullPolicy: Always

nginx:
  image:
    repository: nginx
    tag: alpine
    pullPolicy: Always

admin:
  enabled: true
  name: admin
  replicaCount: 1

  nginx:
    modules: []
      # - modules/path/to/dynamic_module.so
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: 256Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    volumeMounts: []

  resources: {}
    # limits:
    #   cpu: "1"
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

  service:
    name: http
    type: ClusterIP
    externalPort: 8000
    internalPort: 80

  ingress:
    enabled: false

    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    path: /

    hosts: []
    #   - example.domain.com

    tls: []
      # - secretName: example-tls
      #   hosts:
      #     - example.domain.com

  ## Node labels for component pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  env:
    ALLOWED_HOSTS: "*"

  volumeMounts: []

api:
  enabled: true
  name: api
  replicaCount: 1

  nginx:
    modules: []
      # - modules/path/to/dynamic_module.so
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: 256Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    volumeMounts: []

  resources: {}
    # limits:
    #   cpu: "1"
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

  service:
    name: http
    type: ClusterIP
    externalPort: 8000
    internalPort: 80

  ingress:
    enabled: false

    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    path: /

    hosts: []
    #   - example.domain.com

    tls: []
      # - secretName: example-tls
      #   hosts:
      #     - example.domain.com

  ## Node labels for component pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  env:
    ALLOWED_HOSTS: "*"

  volumeMounts: []

beat:
  enabled: true
  name: beat

  resources: {}
    # limits:
    #   cpu: "1"
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

  ## Node labels for component pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  env: {}

  volumeMounts: []

  persistence:
    enabled: true
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 4Gi

collectstatic:
  enabled: false
  name: collectstatic

  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  ## Node labels for component pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  env: {}

  volumeMounts: []

migration:
  enabled: true
  name: migration

  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  persistence:
    enabled: false
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 4Gi

  ## Node labels for component pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  env: {}

  volumeMounts: []

web:
  enabled: true
  name: web
  replicaCount: 1

  nginx:
    cache:
      enabled: false
    preprintDomainSuffix: ''
    modules: []
      # - modules/path/to/dynamic_module.so
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: 256Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    volumeMounts: []
    
  resources: {}
    # limits:
    #   cpu: "1"
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

  service:
    name: http
    type: ClusterIP
    externalPort: 5000
    internalPort: 80

  ingress:
    enabled: false

    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    path: /

    hosts: []
    #   - example.domain.com

    tls: []
      # - secretName: example-tls
      #   hosts:
      #     - example.domain.com

  ## Node labels for component pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  env: {}

  volumeMounts: []
    # - mountPath: /etc/ssl/certs/ca-chain.cert.pem
    #   name: secret-volume
    #   subPath: worker-ca.cert.pem
    #   readOnly: true
    # - mountPath: /etc/ssl/certs/worker.pem
    #   name: secret-volume
    #   subPath: worker.pem
    #   readOnly: true
    # - mountPath: /etc/ssl/private/worker.key
    #   name: secret-volume
    #   subPath: worker.key
    #   readOnly: true

task:
  enabled: false
  name: task
  replicaCount: 1

  concurrency: 2
  logLevel: INFO
  # maxTasksPerChild: 5
  # queues: logged-tasks

  resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

  ## Node labels for component pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  env: {}

  volumeMounts: []

  persistence:
    enabled: true
    # storageClass:
    accessMode: ReadWriteOnce
    size: 10Gi

worker:
  enabled: true
  name: worker
  replicaCount: 1

  concurrency: 1
  logLevel: INFO
  # maxTasksPerChild: 5
  # queues: non-logged-tasks

  resources: {}
    # limits:
    #   cpu: "1"
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

  ## Node labels for component pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  env: {}

  volumeMounts: []

configEnvs:
  DEBUG: ""
  # GEVENT: "1"

configFiles: {}
  # Override configmap files here (and delete the {} above), e.g.:
  #robots.txt: |-
  #  User-agent: *
  #  Disallow: /

secretEnvs: {}
  # SENDGRID_API_KEY: ""
  # RAVEN_DSN: ""

secretFiles: {}
  # admin-local.py: |-
  #   ...
  # api-local.py: |-
  #   ...
  # web-local.py: |-
  #   ...
  # addons-bitbucket-local.py: |-
  #   ...
  # addons-box-local.py: |-
  #   ...
  # addons-dataverse-local.py: |-
  #   ...
  # addons-dropbox-local.py: |-
  #   ...
  # addons-github-local.py: |-
  #   ...
  # addons-googledrive-local.py: |-
  #   ...
  # addons-osfstorage-local.py: |-
  #   ...
  # addons-wiki-local.py: |-
  #   ...
  # addons-zotero-local.py: |-
  #   ...
  # worker-ca.cert.pem: |-
  #   ...
  # worker.pem: |-
  #   ...
  # worker.key: |-
  #   ...

volumeMounts:
  - mountPath: /code/admin/base/settings/local.py
    name: secret-volume
    subPath: admin-local.py
    readOnly: true
  - mountPath: /code/api/base/settings/local.py
    name: secret-volume
    subPath: api-local.py
    readOnly: true
  - mountPath: /code/website/settings/local.py
    name: secret-volume
    subPath: web-local.py
    readOnly: true
  - mountPath: /code/addons/bitbucket/settings/local.py
    name: secret-volume
    subPath: addons-bitbucket-local.py
    readOnly: true
  - mountPath: /code/addons/box/settings/local.py
    name: secret-volume
    subPath: addons-box-local.py
    readOnly: true
  - mountPath: /code/addons/dataverse/settings/local.py
    name: secret-volume
    subPath: addons-dataverse-local.py
    readOnly: true
  - mountPath: /code/addons/dropbox/settings/local.py
    name: secret-volume
    subPath: addons-dropbox-local.py
    readOnly: true
  - mountPath: /code/addons/figshare/settings/local.py
    name: secret-volume
    subPath: addons-figshare-local.py
    readOnly: true
  - mountPath: /code/addons/github/settings/local.py
    name: secret-volume
    subPath: addons-github-local.py
    readOnly: true
  - mountPath: /code/addons/googledrive/settings/local.py
    name: secret-volume
    subPath: addons-googledrive-local.py
    readOnly: true
  - mountPath: /code/addons/mendeley/settings/local.py
    name: secret-volume
    subPath: addons-mendeley-local.py
    readOnly: true
  - mountPath: /code/addons/osfstorage/settings/local.py
    name: secret-volume
    subPath: addons-osfstorage-local.py
    readOnly: true
  - mountPath: /code/addons/wiki/settings/local.py
    name: secret-volume
    subPath: addons-wiki-local.py
    readOnly: true
  - mountPath: /code/addons/zotero/settings/local.py
    name: secret-volume
    subPath: addons-zotero-local.py
    readOnly: true

osf-preprints:
  enabled: false
  service:
    name: preprints
    externalPort: 80

osf-registries:
  enabled: false
  service:
    name: registries
    externalPort: 80

osf-reviews:
  enabled: false
  service:
    name: reviews
    externalPort: 80

osf-web:
  enabled: false
  service:
    name: osfweb
    externalPort: 80

prerender:
  enabled: false
  service:
    name: prerender
    externalPort: 3000

sharejs:
  enabled: false
  service:
    name: sharejs
    externalPort: 7007
  ingress:
    path: /sharejs

share:
  url: https://staging-share.osf.io

postgresql:
  enabled: true

  image: "postgres"
  imageTag: "9.6"

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## Create a database user
  ## Default: postgres
  postgresUser: postgres

  # Default: random 10 character string
  postgresPassword: osf

  ## Create a database
  ## Default: the postgres user
  postgresDatabase: osf

  # Specify initdb arguments, e.g. --data-checksums
  # ref: https://github.com/docker-library/docs/blob/master/postgres/content.md#postgres_initdb_args
  # ref: https://www.postgresql.org/docs/current/static/app-initdb.html
  postgresInitdbArgs: --data-checksums

  ## Persist data to a persitent volume
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 25Gi
    subPath: "postgresql-db"

  metrics:
    enabled: false

  resources: {}
    # limits:
    #  cpu: "1"
    #  memory: 256Mi
    # requests:
    #  cpu: 100m
    #  memory: 256Mi

rabbitmq:
  enabled: true
  image: bitnami/rabbitmq:3.6.11-r1

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## RabbitMQ application username
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  rabbitmqUsername: osf

  ## RabbitMQ application password
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  rabbitmqPassword: osf

  ## Erlang cookie to determine whether different nodes are allowed to communicate with each other
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  # rabbitmqErlangCookie:

  ## Node port
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqNodePort: 5672

  ## Node Type
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqNodeType: stats

  ## Node Name
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqNodeName: rabbit

  ## Node name to cluster with. e.g.: `clusternode@hostname`
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  # rabbitmqClusternodename:

  ## RabbitMQ application vhost
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqVhost: /

  ## RabbitMQ Manager port
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqManagerPort: 15672

  ## Kubernetes service type
  serviceType: ClusterIP

  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 10Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

elasticsearch:
  enabled: true

  image:
    repository: "centerforopenscience/elasticsearch"
    tag: "2.4"
    pullPolicy: "Always"

  rbac:

  cluster:
    env:
      MINIMUM_MASTER_NODES: "1"
      EXPECTED_MASTER_NODES: "1"

  client:
    name: client
    replicas: 1
    serviceType: ClusterIP
    heapSize: "128m"
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: "512Mi"
      # requests:
      #   cpu: "25m"
      #   memory: "256Mi"

  master:
    name: master
    replicas: 1
    heapSize: "128m"
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: "512Mi"
      # requests:
      #   cpu: "25m"
      #   memory: "256Mi"

  data:
    name: data
    replicas: 1
    heapSize: "1536m"
    storage: "30Gi"
    # storageClass: "ssd"
    terminationGracePeriodSeconds: 3600
    resources: {}
      # limits:
      #   cpu: "1"
      #   memory: "512Mi"
      # requests:
      #   cpu: "25m"
      #   memory: "256Mi"
