# Default values for lookit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

nginx:
  image:
    repository: gcr.io/cos-containers/nginx
    tag: '1'
    pullPolicy: Always
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious 
    # choice for the user. This also increases chances charts run on environments with little 
    # resources, such as Minikube. If you do want to specify resources, uncomment the following 
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #limits:
    #  cpu: '1'
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

uwsgi:
  image:
    repository: gcr.io/cos-containers/lookit-api
    tag: develop
    pullPolicy: Always
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious 
    # choice for the user. This also increases chances charts run on environments with little 
    # resources, such as Minikube. If you do want to specify resources, uncomment the following 
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

service:
  name: nginx
  type: ClusterIP
  externalPort: 5000
  internalPort: 80

ingress:
  enabled: false
  # Used to create Ingress record (should used with service.type: ClusterIP).
  hosts:
    - chart-example.local
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

configs: {}
  # Override configmap files here (and delete the {} above), e.g.:
  #robots.txt: |-
  #  User-agent: *
  #  Disallow: /

secrets:
  googleAppCreds.json: |-
    {}

postgresql:
  ## postgres image repository
  image: "postgres"
  ## postgres image version
  ## ref: https://hub.docker.com/r/library/postgres/tags/
  ##
  imageTag: "9.6"

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## Create a database user
  ## Default: postgres
  postgresUser: postgres
  # Default: random 10 character string
  # postgresPassword:

  ## Create a database
  ## Default: the postgres user
  postgresDatabase: lookit

  # Specify initdb arguments, e.g. --data-checksums
  # ref: https://github.com/docker-library/docs/blob/master/postgres/content.md#postgres_initdb_args
  # ref: https://www.postgresql.org/docs/current/static/app-initdb.html
  postgresInitdbArgs: --data-checksums

  ## Persist data to a persitent volume
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 25Gi
    subPath: "postgresql-db"

  metrics:
    enabled: false
    image: wrouesnel/postgres_exporter
    imageTag: v0.1.1
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m