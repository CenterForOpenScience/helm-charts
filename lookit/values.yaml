# Default values for lookit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: quay.io/centerforopenscience/lookit
  tag: develop
  pullPolicy: Always

beat:
  enabled: true
  name: beat

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

web:
  enabled: true
  name: web
  replicaCount: 1

  budget:
    minAvailable: 0

  nginx:
    image:
      repository: nginx
      tag: alpine
      pullPolicy: Always
    resources: {}
      #limits:
      #  cpu: "1"
      #  memory: 128Mi
      #requests:
      #  cpu: 100m
      #  memory: 128Mi

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

  service:
    name: http
    type: ClusterIP
    externalPort: 5000
    internalPort: 80

builder:
  enabled: true
  name: builder
  replicaCount: 1

  budget:
    minAvailable: 0

  concurrency: 1
  maxTasksPerChild: 1
  queues: builds,cleanup

  docker:
    image:
      repository: docker
      tag: 17.06-dind
      pullPolicy: Always
    resources: {}
      #limits:
      #  cpu: "1"
      #  memory: 512Mi
      #requests:
      #  cpu: 100m
      #  memory: 256Mi

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

  persistence:
    enabled: true
    # storageClass:
    accessMode: ReadWriteOnce
    size: 10Gi

worker:
  enabled: true
  name: worker
  replicaCount: 1

  budget:
    minAvailable: 0

  concurrency: 1
  maxTasksPerChild: 5
  queues: email

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

  horizontalPodAutoscaler:
    enabled: false
    maxReplicas: 3
    targetCPUUtilizationPercentage: 90

collectstatic:
  enabled: false
  name: collectstatic

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

migration:
  enabled: true
  name: migration

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

ingress:
  enabled: false
  # Used to create Ingress record (should used with service.type: ClusterIP).
  hosts:
    - chart-example.local
  paths:
    - /
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

certificate:
  enabled: false
  name: cert
  # WORKAROUND: Ingress deploy blocked to GLBC due to race condition w/ missing TLS certificate
  # - Issue: https://github.com/jetstack/cert-manager/issues/606
  # - PR: https://github.com/kubernetes/ingress-gce/pull/388
  tls: true
  # issuerRef:
  #   name: letsencrypt-prod
  #   kind: ClusterIssuer
  # commonName: example.org
  # dnsNames:
  #   - example.org
  #   - subdomain.example.org
  # acmeConfig:
  #   http01: {}
  #     # ingress: ''
  #   domains:
  #     - example.org
  #     - subdomain.example.org

configEnvs:
  DEBUG: ""
  DJANGO_SETTINGS_MODULE: project.settings
  GEVENT: "1"
  ALLOWED_HOSTS: "*"
  # GOOGLE_APPLICATION_CREDENTIALS: /etc/googleAppCreds.json
  # MEDIA_URL: https://storage.googleapis.com/bucket/media/
  # STATIC_URL: https://storage.googleapis.com/bucket/static/
  # GS_BUCKET_NAME: "bucket"
  # GS_PROJECT_ID: "project-id"
  # EMAIL_FROM_ADDRESS: ""
  # LOGIN_REDIRECT_URL: https://chart-example.local/exp/
  # SITE_DOMAIN: chart-example.local
  # ACCOUNT_LOGOUT_REDIRECT_URL: /login/
  # AWS_DEFAULT_REGION: "us-east-1"
  # BUCKET_NAME: ""

configFiles: {}
  # Override configmap files here (and delete the {} above), e.g.:
  #robots.txt: |-
  #  User-agent: *
  #  Disallow: /

secretEnvs: {}
  # AWS_ACCESS_KEY_ID: "abc123"
  # AWS_SECRET_ACCESS_KEY: ""
  # SENDGRID_API_KEY: ""
  # RAVEN_DSN: ""

secretFiles: {}
  # googleAppCreds.json: |-
  #   ...

# volumeMounts:
#   - mountPath: /code/project/settings/local.py
#     name: secret-volume
#     subPath: local.py
#     readOnly: true
#   - mountPath: /etc/googleAppCreds.json
#     name: secret-volume
#     subPath: googleAppCreds.json
#     readOnly: true

postgresql:
  enabled: true

  image: "postgres"
  imageTag: "9.6"

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## Database host
  ## Default: postgresql.fullname
  # postgresHost:

  ## Create a database user
  ## Default: postgres
  postgresUser: postgres

  ## Password for the new user.
  ## Default: If not set, a random 10 characters password will be used.
  postgresPassword: lookit

  ## Create a database
  ## Default: the postgres user
  postgresDatabase: lookit

  # Specify initdb arguments, e.g. --data-checksums
  # ref: https://github.com/docker-library/docs/blob/master/postgres/content.md#postgres_initdb_args
  # ref: https://www.postgresql.org/docs/current/static/app-initdb.html
  postgresInitdbArgs: --data-checksums

  ## Persist data to a persitent volume
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass: ssd
    accessMode: ReadWriteOnce
    size: 25Gi
    subPath: "postgresql-db"

  metrics:
    enabled: false

  resources: {}
    #limits:
    #  cpu: "1"
    #  memory: 256Mi
    #requests:
    #  cpu: 100m
    #  memory: 256Mi

rabbitmq:
  enabled: true
  image: bitnami/rabbitmq:3.6.11-r1

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## RabbitMQ application host
  ##
  # rabbitmqHost:

  ## RabbitMQ application username
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  rabbitmqUsername: lookit

  ## RabbitMQ application password
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  rabbitmqPassword: lookit

  ## Erlang cookie to determine whether different nodes are allowed to communicate with each other
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  # rabbitmqErlangCookie:

  ## Node port
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqNodePort: 5672

  ## Node Type
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqNodeType: stats

  ## Node Name
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqNodeName: rabbit

  ## Node name to cluster with. e.g.: `clusternode@hostname`
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  # rabbitmqClusterNodeName:

  ## RabbitMQ application vhost
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqVhost: /

  ## RabbitMQ Manager port
  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
  ##
  rabbitmqManagerPort: 15672

  ## Kubernetes service type
  serviceType: ClusterIP

  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    accessMode: ReadWriteOnce
    size: 8Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m