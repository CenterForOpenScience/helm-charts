# Default values for sharejs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

nginx:
  image:
    repository: nginx
    tag: '1'
    pullPolicy: Always
  resources: {}
    # limits:
    #   cpu: 1
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

nodejs:
  image:
    repository: quay.io/centerforopenscience/osf
    tag: develop
    pullPolicy: Always
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

service:
  name: http
  type: ClusterIP
  externalPort: 7007
  internalPort: 80

ingress:
  enabled: false
  # Used to create Ingress record (should used with service.type: ClusterIP).
  hosts:
    - chart-example.local
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

serverHost: '0.0.0.0'
serverPort: '7007'
dbName: 'sharejs'
corsAllowOrigin: 'https://staging-n.osf.io'
sentryDSN: 'https://'

configs: {}
  # Override configmap files here (and delete the {} above), e.g.:
  # robots.txt: |-
  #   User-agent: *
  #   Disallow: /

mongodb:
  ## Bitnami MongoDB image version
  ## ref: https://hub.docker.com/r/bitnami/mongodb/tags/
  ##
  image: bitnami/mongodb:3.4.5-r0

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## MongoDB admin password
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
  ##
  # mongodbRootPassword:

  ## MongoDB custom user and database
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run
  ##
  # mongodbUsername:
  # mongodbPassword:
  mongodbDatabase: sharejs

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    accessMode: ReadWriteOnce
    size: 8Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m