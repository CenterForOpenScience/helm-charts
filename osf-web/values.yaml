# Default values for osf-web.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 3

nginx:
  image:
    repository: gcr.io/cos-containers/nginx
    tag: '1'
    pullPolicy: Always
  resources:
    limits:
      cpu: "1"
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

preprints:
  image:
    repository: gcr.io/cos-containers/ember-preprints
    tag: develop-production-stage1
    pullPolicy: Always
  resources:
    limits:
      cpu: "1"
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

registries:
  image:
    repository: gcr.io/cos-containers/ember-osf-registries
    tag: develop-production-stage1
    pullPolicy: Always
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

uwsgi:
  image:
    repository: gcr.io/cos-containers/osf
    tag: develop
    pullPolicy: Always
  resources:
    limits:
      cpu: "1"
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

service:
  name: http
  type: ClusterIP
  externalPort: 5000
  internalPort: 80

secrets:
  addons-box-local.py: |-
    # -*- coding: utf-8 -*-
    BOX_KEY = ''
    BOX_SECRET = ''
  addons-dataverse-local.py: |-
    # -*- coding: utf-8 -*-
    HOST = ''
  addons-dropbox-local.py: |-
    # -*- coding: utf-8 -*-
    DROPBOX_KEY = ''
    DROPBOX_SECRET = ''
  addons-figshare-local.py: |-
    # -*- coding: utf-8 -*-
    CLIENT_ID = ''
    CLIENT_SECRET = ''
  addons-github-local.py: |-
    # -*- coding: utf-8 -*-
    CLIENT_ID = ''
    CLIENT_SECRET = ''
  addons-googledrive-local.py: |-
    # -*- coding: utf-8 -*-
    CLIENT_ID = ''
    CLIENT_SECRET = ''
  addons-mendeley-local.py: |-
    # -*- coding: utf-8 -*-
    MENDELEY_CLIENT_ID = ''
    MENDELEY_CLIENT_SECRET = ''
  addons-osfstorage-local.py: |-
    # -*- coding: utf-8 -*-
    WATERBUTLER_CREDENTIALS = {
        'storage': {
            'region': '',
            'username': '',
            'token': '',
            'temp_key': '',
        },
        'parity': {
            'region': '',
            'username': '',
            'token': '',
            'temp_key': '',
        },
        'archive': {
            'access_key': '',
            'secret_key': '',
        },
    }

    WATERBUTLER_SETTINGS = {
        'storage': {
            'provider': '',
            'container': '',
            'use_public': True,
        },
        'parity': {
            'provider': '',
            'container': '',
            'use_public': True,
        },
        'archive': {
            'vault': '',
        },
    }

    WATERBUTLER_RESOURCE = 'container'
  addons-wiki-local.py: |-
    # -*- coding: utf-8 -*-
    from datetime import datetime

    SHAREJS_URL = ''
    WIKI_CHANGE_DATE = datetime.utcfromtimestamp('')
  addons-zotero-local.py: |-
    # -*- coding: utf-8 -*-
    ZOTERO_CLIENT_ID = ''
    ZOTERO_CLIENT_SECRET = ''
  website-local.py: |-
    # -*- coding: utf-8 -*-
    import os

    # TBD...

configs:
  nginx.conf: |-
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $upstream_cache_status $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        gzip on;
        gzip_disable "MSIE [1-6]\.(?!.*SV1)";
        gzip_comp_level 2;
        gzip_min_length 512;
        gzip_proxied any;
        gzip_vary on;
        gzip_types text/plain text/css application/javascript application/x-javascript text/xml application/xml text/javascript application/json application/xml+rss;

        ##
        # Caching Settings
        ##

        # # Pull cache-busting key out of query string
        # map $args $args_first {
        #     default $args;
        #     ~^(?<first>.*?)&?_=\d+ $first;
        # }
        # map $args $args_rest {
        #     default "";
        #     ~^\?_=\d+&?(?<rest>.*)$ $rest;
        #     ~_=\d+(?<rest>.*)$ $rest;
        # }

        # uwsgi_cache_path /cache/uwsgi keys_zone=osf_uwsgi_cache:10m inactive=120m;
        # uwsgi_temp_path /cache/uwsgi-temp;
        #
        # proxy_cache_path /cache/proxy keys_zone=osf_proxy_cache:10m inactive=120m;
        # proxy_temp_path /cache/proxy-temp;

        server {
            listen 80;
            keepalive_timeout 15;

            root /static/code;
            client_max_body_size 25M;

            server_name _;
            if ($http_x_forwarded_proto = "http") {
                return 301 https://$host$request_uri;
            }

            location = /healthz {
                access_log off;
                return 200;
            }

            location /robots.txt {
                alias /nginx/robots.txt;
            }

            location ~ /static/addons/(.*?)/(.*) {
                alias /static/code/addons/$1/static/$2;
            }

            location /static/ {
                alias /static/code/website/static/;
            }

            location /registries/ {
                root /static/;
                index index.html;

                if (-f $request_filename) {
                    add_header Cache-Control "public, max-age=31536000";
                    break;
                }

                add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate";
                add_header Expires "Mon, 01 Jan 1990 00:00:00 GMT";
                add_header Pragma "no-cache";
                rewrite (.*) /registries/index.html break;
            }

            location ~* ^/preprints/(?!(\w+/download|\w+/\w+/download)/?$).* {
                root /static/;
                index index.html;

                if (-f $request_filename) {
                    add_header Cache-Control "public, max-age=31536000";
                    break;
                }

                add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate";
                add_header Expires "Mon, 01 Jan 1990 00:00:00 GMT";
                add_header Pragma "no-cache";
                rewrite (.*) /preprints/index.html break;
            }

            # # SHARE
            # location /share/docs {
            #     proxy_pass https://staging-share-registration.osf.io/api/v1/share/data/help;
            #
            #     proxy_set_header Host $host;
            #     proxy_set_header X-Real-IP $remote_addr;
            #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #     proxy_set_header X-Forwarded-Host $host;
            #     proxy_set_header X-Forwarded-Proto https;
            # }
            #
            # # SHARE
            # location /api/v1/share/data {
            #     proxy_pass https://staging-share-registration.osf.io/api/v1/share/data;
            #
            #     proxy_redirect off;
            #     proxy_set_header Host $host;
            #     proxy_set_header X-Real-IP $remote_addr;
            #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #     proxy_set_header X-Forwarded-Host $host;
            #     proxy_set_header X-Forwarded-Proto https;
            # }
            #
            # # SHARE
            # location /api/v1/share/documents/ {
            #     rewrite /api/v1/share/documents(.*) /documents$1 break;
            #     proxy_pass https://staging-share.osf.io;
            # }

            location / {
                # the google health check is a bit overwhelming
                # if ($http_user_agent ~* "googlehc") {
                #     access_log off;
                #     return 200 '';
                # }

                # Disable caching of application requests
                add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate";
                add_header Expires "Mon, 01 Jan 1990 00:00:00 GMT";
                add_header Pragma "no-cache";

                # Pass requests to uwsgi application
                include /etc/nginx/uwsgi_params;
                uwsgi_buffering off;
                uwsgi_request_buffering off;
                uwsgi_pass uwsgi://127.0.0.1:5000;

                # URL rewrites
                rewrite "^/project/.*?/node/(.*)" https://$host/$1 permanent;
                rewrite "^/project/([a-zA-Z0-9]{5,}.*)" https://$host/$1 permanent;
                rewrite "^/profile/([a-zA-Z0-9]{5,})" https://$host/$1 permanent;
            }
        }
    }
  robots.txt: |-
    User-agent: *
    Disallow: /
  uwsgi.ini: |-
    [uwsgi]
    uid = www-data
    gid = www-data

    # add user-agent, http://uwsgi.unbit.narkive.com/jEtphIzE/default-log-format-explained#post5
    log-format = [pid: %(pid)|app: ?|req: ?/?] %(addr) (%(user)) {%(vars) vars in %(pktsize) bytes} [%(ctime)] %(method) %(uri) => generated %(rsize) bytes in %(msecs) msecs (%(proto) %(status)) %(headers) headers in %(hsize) bytes (%(switches) switches on core %(core)) "%(uagent)"

    # Flask-related settings
    chdir = /code
    module = main:app
    env = OSF_PRODUCTION=1
    env = DJANGO_SETTINGS_MODULE=api.base.settings

    # process-related settings
    master = true
    workers = 1
    threads = 1
    harakiri = 120
    buffer-size = 8192
    socket = :5000
    stats = :1717
    vacuum = true
    need-app = true
    show-config = true

    # greenlet settings
    gevent=2000
    gevent-monkey-patch=true

    master
