apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "osf-gravyvalet.fullname" . }}
  labels:
    app: {{ template "osf-gravyvalet.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "osf-gravyvalet.name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "osf-gravyvalet.name" . }}
        release: {{ .Release.Name }}
      annotations:
        {{- include "osf-gravyvalet.deploymentAnnotations" . | nindent 8 }}
    spec:
      affinity:
        {{- if .Values.additionalAffinities }}
        {{- toYaml .Values.additionalAffinities | nindent 8 }}
        {{- end }}
        {{- if eq .Values.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "osf-gravyvalet.name" . }}
                  release: {{ .Release.Name }}
        {{- else if eq .Values.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: {{ template "osf-gravyvalet.name" . }}
                    release: {{ .Release.Name }}
        {{- end }}
      initContainers:
        - name: collectstatic
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - python
            - manage.py
            - collectstatic
            - --noinput
          volumeMounts:
            - mountPath: /code/static
              name: static
      {{- if .Values.tls.enabled }}
        {{- include "gravyvalet.certificates.initContainer" . | nindent 8 }}
      {{- end }}
      containers:
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          command:
            - nginx
            - -c
            - /etc/nginx/nginx.conf
            - -g
            - daemon off;
          ports:
            - name: http-internal
              containerPort: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 10
          volumeMounts:
            - name: config
              subPath: nginx.conf
              mountPath: /etc/nginx/nginx.conf
              readOnly: true
            - name: config
              subPath: robots.txt
              mountPath: /usr/share/nginx/html/robots.txt
              readOnly: true
            - mountPath: /static
              name: static
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
        - name: daphne
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - python -m daphne -b 0.0.0.0 -p {{ .Values.service.externalPort }} app.asgi:application
          env:
            {{- include "osf-gravyvalet.environment" . | nindent 12 }}
            {{- range $key, $value := .Values.daphne.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: http-external
              containerPort: {{ .Values.service.externalPort }}
          readinessProbe:
            httpGet:
              path: /v1/status/
              port: {{ .Values.service.externalPort }}
          volumeMounts:
            - name: localcache
              mountPath: /tmp/gravyvaletlocalcache
            {{- include "gravyvalet.volumeMounts" . | nindent 12 }}
            {{- if .Values.daphne.volumeMounts }}
            {{- toYaml .Values.daphne.volumeMounts | nindent 12 }}
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
          resources:
            {{- toYaml .Values.daphne.resources | nindent 12 }}
      volumes:
        {{- include "osf-gravyvalet.volumes" . | nindent 8 }}
        - name: static
          emptyDir: {}
        - name: localcache
          emptyDir: {}
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "osf-gravyvalet.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: config-volume
          configMap:
            name: {{ template "osf-gravyvalet.fullname" . }}
        - name: secret-volume
          secret:
            secretName: {{ template "osf-gravyvalet.fullname" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        {{- if hasKey .Values.persistence "storageClass" }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
